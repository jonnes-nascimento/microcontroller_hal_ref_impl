{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment HAL Stubs  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0.0.1 \par
}}HAL Stubs}
{\comment Generated by doxygen1.9.2.}
{\creatim \yr2021\mo12\dy20\hr20\min8\sec35}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt HAL Stubs}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 0.0.1\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Mon Dec 20 2021 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
HAL Stubs\par \pard\plain 
{\tc \v HAL Stubs}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Project Introduction
\par}
{\tc\tcl2 \v Project Introduction}
Microcontroller HAL Reference Implementation \par
*** Work in Progress *** \par
This work has been written as a basis for the study of microcontrollers drivers and is based mainly on Jacob Beningo's book {\f2 Reusable Firmware Development}. Apress. 2017.\par
Author: Eng. Jonnes F. Nascimento. 2021\par}
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Version Log
\par}
{\tc\tcl2 \v Version Log}
\par}
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Acronyms
\par}
{\tc\tcl2 \v Acronyms}
\par}
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Software Architecture Overview
\par}
{\tc\tcl2 \v Software Architecture Overview}
\par}
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
APIs
\par}
{\tc\tcl2 \v APIs}
\par}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HALs
\par}
{\tc\tcl2 \v HALs}
\par}
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Middleware
\par}
{\tc\tcl2 \v Middleware}
\par}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OS Information
\par}
{\tc\tcl2 \v OS Information}
\par}
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Coding Standards
\par}
{\tc\tcl2 \v Coding Standards}
\par}
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Documentation
\par}
{\tc\tcl2 \v Documentation}
\par}
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Project Requirements
\par}
{\tc\tcl2 \v Project Requirements}
\par}
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Testing and Validation
\par}
{\tc\tcl2 \v Testing and Validation}
\par
 \par}
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tools
\par}
{\tc\tcl2 \v Tools}
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Compiler
\par}
{\tc\tcl3 \v Compiler}
GNU C Compiler (GCC) \par}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Microcontroller HAL Reference Implementation{\tc \v Microcontroller HAL Reference Implementation}\par \pard\plain 
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\b Note:} \par
 This is a work in progress. \par
 The code has been written as a basis for the study of microcontrollers APIs, HALs and drivers.\par
 This work is based mainly on Jacob Beningo's book {\i Reusable Firmware Development} . Apress. 2017.\par
Author: Eng. Jonnes F. Nascimento. 2021 \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Module Index\par \pard\plain 
{\tc \v Module Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Modules\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all modules:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Configurations\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Drivers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Hardware\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b GpioConfig_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GpioPort_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b D:/projects/HAL/microcontroller_hal_ref_impl/{\b main.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main program })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/projects/HAL/microcontroller_hal_ref_impl/cmake-build-debug/CMakeFiles/3.21.1/CompilerIdC/{\b CMakeCCompilerId.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/{\b gpio_config.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface implementation for general purpose input/output configurations })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/{\b gpio_config.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface definition for general purpose input/output configurations })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/gpio/{\b gpio.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface implementation for general purpose input/output (GPIO) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/gpio/{\b gpio.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface definition for general purpose input/output (GPIO) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/hardware/{\b pic12f683.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIC12F683 hardware definitions and specifications })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/projects/HAL/microcontroller_hal_ref_impl/hal/library/{\b constants.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface definition for support functions, types and constants })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Module Documentation{\tc \v Module Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Configurations\par \pard\plain 
{\tc\tcl2 \v Configurations}
{\xe \v Configurations}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b GpioConfig_t} *const {\b GpioConfigGet} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral configurations group. \par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v GpioConfigGet\:Configurations}
{\xe \v Configurations\:GpioConfigGet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b GpioConfig_t} *const GpioConfigGet (void )}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  \par
Helper function to get GPIO configuration table.\par
Pre-condition: Configuration table defined (sizeof > 0) \par
Post-condition: Pointer with first item of the GPIO configurations table\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i []} \cell }{void\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
const {\b GpioConfig_t} *\par
}}{\b Example:}  \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} GpioConfig_t Config = GpioConfigGet();\par
}
\par
{\b HISTORY OF CHANGES}  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Date \cell }{Software Version \cell }{Initials \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{16/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Interface Created  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{20/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Documentation Created  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
\par
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
}{
Definition at line {\b 82} of file {\b gpio_config.c}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "group___configurations_gafd1ae0c543cb31bdd2d0806bcbdb5d9b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Drivers\par \pard\plain 
{\tc\tcl2 \v Drivers}
{\xe \v Drivers}
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BYTE_TO_BINARY_PATTERN}\~ "%c%c%c%c%c%c%c%c"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BYTE_TO_BINARY}(byte)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Init} (const {\b GpioConfig_t} *const Config)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Write} ({\b GpioChannel_t} channel, {\b GpioPinState_t} state)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GpioPinState_t} {\b Gpio_Read} ({\b GpioChannel_t} channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Toggle} ({\b GpioChannel_t} channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Register_Write} ({\b GpioPort_t} Port)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GpioPort_t} {\b Gpio_Register_Read} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Callback_Register} ({\b GpioCallbackEvent_t} event, void(*CallbackFunction)(void))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b trisio} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b gpio} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b ansel} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b option} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b intcon} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral drivers group (GPIO, TIMERS, SPI, etc). \par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v BYTE_TO_BINARY\:Drivers}
{\xe \v Drivers\:BYTE_TO_BINARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BYTE_TO_BINARY( byte)}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf18 byte} & 0x80 ? {\cf23 '1'} : {\cf23 '0'}), \\\par
  ({\cf18 byte} & 0x40 ? {\cf23 '1'} : {\cf23 '0'}), \\\par
  ({\cf18 byte} & 0x20 ? {\cf23 '1'} : {\cf23 '0'}), \\\par
  ({\cf18 byte} & 0x10 ? {\cf23 '1'} : {\cf23 '0'}), \\\par
  ({\cf18 byte} & 0x08 ? {\cf23 '1'} : {\cf23 '0'}), \\\par
  ({\cf18 byte} & 0x04 ? {\cf23 '1'} : {\cf23 '0'}), \\\par
  ({\cf18 byte} & 0x02 ? {\cf23 '1'} : {\cf23 '0'}), \\\par
  ({\cf18 byte} & 0x01 ? {\cf23 '1'} : {\cf23 '0'})\par
}
{
Definition at line {\b 37} of file {\b gpio.c}.}\par
}
{\xe \v BYTE_TO_BINARY_PATTERN\:Drivers}
{\xe \v Drivers\:BYTE_TO_BINARY_PATTERN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BYTE_TO_BINARY_PATTERN\~ "%c%c%c%c%c%c%c%c"}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b gpio.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Gpio_Callback_Register\:Drivers}
{\xe \v Drivers\:Gpio_Callback_Register}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Gpio_Callback_Register ({\b GpioCallbackEvent_t}  {\i event}, void(*)(void)  {\i CallbackFunction})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  \par
This function is used to register a callback function to an interrupt event\par
Pre-condition: GPIO port must have been initialized \par
 Pre-condition: The GPIO port bit must have been configured to trigger the interrupt\par
Post-condition: The callback function is called to handles the interrupt event\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i event} \cell }{is a pre-configured interrupt event \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i (*CallbackFunction)(void)} \cell }{is the callback function to call\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example:}  \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Gpio_Callback_Register(GPIO_EXTERNAL_INTERRUPT, BlinkLED);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Gpio_Init} \par
{\b Gpio_Write} \par
{\b Gpio_Read} \par
{\b Gpio_Toggle} \par
{\b Gpio_Register_Write} \par
{\b Gpio_Register_Read}\par
}}{\b HISTORY OF CHANGES}  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Date \cell }{Software Version \cell }{Initials \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{20/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Creation Date  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
\par
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
}{
Definition at line {\b 472} of file {\b gpio.c}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "group___drivers_gae46f6bfb2db2890eb3a08d39c973ca82_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v Gpio_Init\:Drivers}
{\xe \v Drivers\:Gpio_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Gpio_Init (const {\b GpioConfig_t} *const  {\i Config})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  \par
This function is used to initializes the GPIO port based on the configuration table defined in gpio_config module.\par
Pre-condition: Configuration table defined (sizeof > 0) \par
 Pre-condition: NUMBER_OF_PORTS > 0 \par
 Pre-condition: GPIO_MAX_PIN_NUMBER > 0 \par
 Pre-condition: System's oscillator, comparator and A/D converters initialized \par
Post-condition: GPIO port initialized and configured\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i Config} \cell }{is a pointer to configuration table for the GPIO peripheral.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example:}  \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Gpio_Init(GpioConfigGet());\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Gpio_Write} \par
{\b Gpio_Read} \par
{\b Gpio_Toggle} \par
{\b Gpio_Register_Write} \par
{\b Gpio_Register_Read} \par
{\b Gpio_Callback_Register}\par
}}{\b HISTORY OF CHANGES}  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Date \cell }{Software Version \cell }{Initials \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{16/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Creation Date  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{17/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Documentation Created  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
\par
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
}{
Definition at line {\b 146} of file {\b gpio.c}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "group___drivers_gaba4bf0e9e96d49b2779b2eff918e05ab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v Gpio_Read\:Drivers}
{\xe \v Drivers\:Gpio_Read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GpioPinState_t} Gpio_Read ({\b GpioChannel_t}  {\i channel})}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  \par
This function is used to read a pin state, specified by a channel, from GPIO port.\par
Pre-condition: GPIO port must have been initialized \par
Post-condition: GPIO port state is returned\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i channel} \cell }{is a GpioChannel_t that represents a bit on GPIO port\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
GpioPinState_t\par
}}{\b Example:}  \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid GpioPinState_t PinState = Gpio_Read(CHANNEL_GP3);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Gpio_Init} \par
{\b Gpio_Write} \par
{\b Gpio_Toggle} \par
{\b Gpio_Register_Write} \par
{\b Gpio_Register_Read} \par
{\b Gpio_Callback_Register}\par
}}{\b HISTORY OF CHANGES}  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Date \cell }{Software Version \cell }{Initials \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{20/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Creation Date  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
\par
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
}{
Definition at line {\b 306} of file {\b gpio.c}.}\par
}
{\xe \v Gpio_Register_Read\:Drivers}
{\xe \v Drivers\:Gpio_Register_Read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GpioPort_t} Gpio_Register_Read (void )}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  \par
This function is used to read GPIO port byte.\par
Pre-condition: GPIO port must have been initialized \par
Post-condition: None\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i void} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b GpioPort_t}\par
}}{\b Example:}  \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid GpioPort_t Port = Gpio_Register_Read();\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Gpio_Init} \par
{\b Gpio_Write} \par
{\b Gpio_Read} \par
{\b Gpio_Toggle} \par
{\b Gpio_Register_Write} \par
{\b Gpio_Callback_Register}\par
}}{\b HISTORY OF CHANGES}  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Date \cell }{Software Version \cell }{Initials \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{20/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Creation Date  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
\par
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
}{
Definition at line {\b 430} of file {\b gpio.c}.}\par
}
{\xe \v Gpio_Register_Write\:Drivers}
{\xe \v Drivers\:Gpio_Register_Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Gpio_Register_Write ({\b GpioPort_t}  {\i Port})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  \par
This function is used to write a byte that represents all GPIO port bits to GPIO port.\par
Pre-condition: GPIO port must have been initialized \par
Post-condition: All GPIO port bits sets according to the byte parameter\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i Port} \cell }{is a {\b GpioPort_t} that represents all GPIO bits\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example:}  \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Gpio_Register_Write(0x04);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Gpio_Init} \par
{\b Gpio_Write} \par
{\b Gpio_Read} \par
{\b Gpio_Toggle} \par
{\b Gpio_Register_Read} \par
{\b Gpio_Callback_Register}\par
}}{\b HISTORY OF CHANGES}  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Date \cell }{Software Version \cell }{Initials \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{16/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Creation Date  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{17/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Documentation Created  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
\par
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
}{
Definition at line {\b 387} of file {\b gpio.c}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "group___drivers_gacdfdb42f0eda5599781e413e5384ec2a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v Gpio_Toggle\:Drivers}
{\xe \v Drivers\:Gpio_Toggle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Gpio_Toggle ({\b GpioChannel_t}  {\i channel})}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  \par
This function is used to toggle a pin state, specified by a channel, from GPIO port.\par
Pre-condition: GPIO port must have been initialized \par
Post-condition: GPIO port state is toggled\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i channel} \cell }{is a GpioChannel_t that represents a bit on GPIO port\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example:}  \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Gpio_Toggle(CHANNEL_GP3);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Gpio_Init} \par
{\b Gpio_Write} \par
{\b Gpio_Read} \par
{\b Gpio_Register_Write} \par
{\b Gpio_Register_Read} \par
{\b Gpio_Callback_Register}\par
}}{\b HISTORY OF CHANGES}  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Date \cell }{Software Version \cell }{Initials \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{20/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Creation Date  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
\par
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
}{
Definition at line {\b 346} of file {\b gpio.c}.}\par
}
{\xe \v Gpio_Write\:Drivers}
{\xe \v Drivers\:Gpio_Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Gpio_Write ({\b GpioChannel_t}  {\i channel}, {\b GpioPinState_t}  {\i state})}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  \par
This function is used to write a bit, specified by a channel, to GPIO port.\par
Pre-condition: GPIO port must have been initialized \par
Post-condition: GPIO port bit setted or cleared\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i channel} \cell }{is a GpioChannel_t that represents a bit on GPIO port \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i state} \cell }{is a GpioPinState_t that represents a state of the bit on GPIO port\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example:}  \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Gpio_Write(CHANNEL_GP3, GPIO_PIN_STATE_HIGH);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Gpio_Init} \par
{\b Gpio_Read} \par
{\b Gpio_Toggle} \par
{\b Gpio_Register_Write} \par
{\b Gpio_Register_Read} \par
{\b Gpio_Callback_Register}\par
}}{\b HISTORY OF CHANGES}  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Date \cell }{Software Version \cell }{Initials \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{16/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Creation Date  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{17/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Documentation Created  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
\par
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
}{
Definition at line {\b 263} of file {\b gpio.c}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "group___drivers_gaaad357fa85fa00542c5db89d2d867691_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ansel\:Drivers}
{\xe \v Drivers\:ansel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} ansel = 0}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b gpio.c}.}\par
}
{\xe \v gpio\:Drivers}
{\xe \v Drivers\:gpio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} gpio = 0}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b gpio.c}.}\par
}
{\xe \v intcon\:Drivers}
{\xe \v Drivers\:intcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} intcon = 0}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 59} of file {\b gpio.c}.}\par
}
{\xe \v option\:Drivers}
{\xe \v Drivers\:option}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} option = 0}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b gpio.c}.}\par
}
{\xe \v trisio\:Drivers}
{\xe \v Drivers\:trisio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} trisio = 0}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 55} of file {\b gpio.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hardware\par \pard\plain 
{\tc\tcl2 \v Hardware}
{\xe \v Hardware}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char const {\b GIE1_BIT_MASK} = (unsigned char) 0x80\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char const {\b INTE_BIT_MASK} = (unsigned char) 0x10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char const {\b INTF_BIT_MASK} = (unsigned char) 0x02\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char const {\b INTEDG_BIT_MASK} = (unsigned char) 0x40\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b FSR} = (unsigned char *) 0x04\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b GPIO} = (unsigned char *) 0x05\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b INTCON} = (unsigned char *) 0x0B\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b PIR1} = (unsigned char *) 0x0C\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b CMCON0} = (unsigned char *) 0x19\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b ADCON0} = (unsigned char *) 0x1F\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b OPTION} = (unsigned char *) 0x85\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b TRISIO} = (unsigned char *) 0x85\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b PIE1} = (unsigned char *) 0x8C\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b OSCCON} = (unsigned char *) 0x8F\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b ANSEL} = (unsigned char *) 0x9F\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral hardware and registers configuration group. \par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ADCON0\:Hardware}
{\xe \v Hardware\:ADCON0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile unsigned char* const ADCON0 = (unsigned char *) 0x1F}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog/Digital converter register \par
}{
Definition at line {\b 35} of file {\b pic12f683.h}.}\par
}
{\xe \v ANSEL\:Hardware}
{\xe \v Hardware\:ANSEL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile unsigned char* const ANSEL = (unsigned char *) 0x9F}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General purpose I/O port analog mode register \par
}{
Definition at line {\b 40} of file {\b pic12f683.h}.}\par
}
{\xe \v CMCON0\:Hardware}
{\xe \v Hardware\:CMCON0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile unsigned char* const CMCON0 = (unsigned char *) 0x19}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Comparator configuration register \par
}{
Definition at line {\b 34} of file {\b pic12f683.h}.}\par
}
{\xe \v FSR\:Hardware}
{\xe \v Hardware\:FSR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile unsigned char* const FSR = (unsigned char *) 0x04}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indirect data memory adrress pointer \par
 \par
}{
Definition at line {\b 30} of file {\b pic12f683.h}.}\par
}
{\xe \v GIE1_BIT_MASK\:Hardware}
{\xe \v Hardware\:GIE1_BIT_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char const GIE1_BIT_MASK = (unsigned char) 0x80}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INTCON GIE1 (global interrupt enable) bit mask \par
}{
Definition at line {\b 25} of file {\b pic12f683.h}.}\par
}
{\xe \v GPIO\:Hardware}
{\xe \v Hardware\:GPIO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile unsigned char* const GPIO = (unsigned char *) 0x05}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General purpose I/O port register \par
}{
Definition at line {\b 31} of file {\b pic12f683.h}.}\par
}
{\xe \v INTCON\:Hardware}
{\xe \v Hardware\:INTCON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile unsigned char* const INTCON = (unsigned char *) 0x0B}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt control register \par
}{
Definition at line {\b 32} of file {\b pic12f683.h}.}\par
}
{\xe \v INTE_BIT_MASK\:Hardware}
{\xe \v Hardware\:INTE_BIT_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char const INTE_BIT_MASK = (unsigned char) 0x10}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INTCON INTE (GP2/INT - external interrupt enable) bit mask \par
}{
Definition at line {\b 26} of file {\b pic12f683.h}.}\par
}
{\xe \v INTEDG_BIT_MASK\:Hardware}
{\xe \v Hardware\:INTEDG_BIT_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char const INTEDG_BIT_MASK = (unsigned char) 0x40}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OPTION INTEDG (GP2/INT - external interrupt edge trigger) bit mask \par
}{
Definition at line {\b 28} of file {\b pic12f683.h}.}\par
}
{\xe \v INTF_BIT_MASK\:Hardware}
{\xe \v Hardware\:INTF_BIT_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char const INTF_BIT_MASK = (unsigned char) 0x02}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INTCON INTF (GP2/INT - external interrupt flag) bit mask \par
}{
Definition at line {\b 27} of file {\b pic12f683.h}.}\par
}
{\xe \v OPTION\:Hardware}
{\xe \v Hardware\:OPTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile unsigned char* const OPTION = (unsigned char *) 0x85}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Control bits register \par
}{
Definition at line {\b 36} of file {\b pic12f683.h}.}\par
}
{\xe \v OSCCON\:Hardware}
{\xe \v Hardware\:OSCCON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile unsigned char* const OSCCON = (unsigned char *) 0x8F}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System oscillator control register \par
}{
Definition at line {\b 39} of file {\b pic12f683.h}.}\par
}
{\xe \v PIE1\:Hardware}
{\xe \v Hardware\:PIE1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile unsigned char* const PIE1 = (unsigned char *) 0x8C}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral interrupt enable register 1 \par
}{
Definition at line {\b 38} of file {\b pic12f683.h}.}\par
}
{\xe \v PIR1\:Hardware}
{\xe \v Hardware\:PIR1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile unsigned char* const PIR1 = (unsigned char *) 0x0C}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peripheral interrupt request register 1 \par
}{
Definition at line {\b 33} of file {\b pic12f683.h}.}\par
}
{\xe \v TRISIO\:Hardware}
{\xe \v Hardware\:TRISIO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile unsigned char* const TRISIO = (unsigned char *) 0x85}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General purpose I/O pin direction register \par
}{
Definition at line {\b 37} of file {\b pic12f683.h}.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GpioConfig_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v GpioConfig_t}
{\xe \v GpioConfig_t}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\par
{
{\f2 #include <gpio_config.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GpioChannel_t} {\b Channel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GpioPinFunction_t} {\b Function}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GpioPinDirection_t} {\b Direction}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GpioPinPullUp_t} {\b PullUp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GpioPinState_t} {\b State}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GpioInterruptEdge_t} {\b InterruptEdge}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO configurations. \par
}{
Definition at line {\b 161} of file {\b gpio_config.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Channel\:GpioConfig_t}
{\xe \v GpioConfig_t\:Channel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GpioChannel_t} Channel}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Name of gpio pin \par
}{
Definition at line {\b 163} of file {\b gpio_config.h}.}\par
}
{\xe \v Direction\:GpioConfig_t}
{\xe \v GpioConfig_t\:Direction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GpioPinDirection_t} Direction}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Direction of gpio pin \par
}{
Definition at line {\b 165} of file {\b gpio_config.h}.}\par
}
{\xe \v Function\:GpioConfig_t}
{\xe \v GpioConfig_t\:Function}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GpioPinFunction_t} Function}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function of gpio pin \par
}{
Definition at line {\b 164} of file {\b gpio_config.h}.}\par
}
{\xe \v InterruptEdge\:GpioConfig_t}
{\xe \v GpioConfig_t\:InterruptEdge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GpioInterruptEdge_t} InterruptEdge}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt edge trigger \par
}{
Definition at line {\b 168} of file {\b gpio_config.h}.}\par
}
{\xe \v PullUp\:GpioConfig_t}
{\xe \v GpioConfig_t\:PullUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GpioPinPullUp_t} PullUp}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pull-Up resistor of gpio pin \par
}{
Definition at line {\b 166} of file {\b gpio_config.h}.}\par
}
{\xe \v State\:GpioConfig_t}
{\xe \v GpioConfig_t\:State}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GpioPinState_t} State}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin state \par
}{
Definition at line {\b 167} of file {\b gpio_config.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/{\b gpio_config.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GpioPort_t Union Reference\par \pard\plain 
{\tc\tcl2 \v GpioPort_t}
{\xe \v GpioPort_t}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\par
{
{\f2 #include <gpio_config.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b Byte}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b __pad0__}: 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b Bit5}: 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b Bit4}: 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b Bit3}: 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b Bit2}: 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b Bit1}: 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b Bit0}: 1\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Union that represents the GPIO port. \par
}{
Definition at line {\b 61} of file {\b gpio_config.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v __pad0__\:GpioPort_t}
{\xe \v GpioPort_t\:__pad0__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} __pad0__}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gpio port unused bits (reads 0) \par
}{
Definition at line {\b 65} of file {\b gpio_config.h}.}\par
}
{\xe \v Bit0\:GpioPort_t}
{\xe \v GpioPort_t\:Bit0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} Bit0}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gpio port bit 0 (GP0) \par
}{
Definition at line {\b 71} of file {\b gpio_config.h}.}\par
}
{\xe \v Bit1\:GpioPort_t}
{\xe \v GpioPort_t\:Bit1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} Bit1}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gpio port bit 1 (GP1) \par
}{
Definition at line {\b 70} of file {\b gpio_config.h}.}\par
}
{\xe \v Bit2\:GpioPort_t}
{\xe \v GpioPort_t\:Bit2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} Bit2}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gpio port bit 2 (GP2) \par
}{
Definition at line {\b 69} of file {\b gpio_config.h}.}\par
}
{\xe \v Bit3\:GpioPort_t}
{\xe \v GpioPort_t\:Bit3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} Bit3}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gpio port bit 3 (GP3) \par
}{
Definition at line {\b 68} of file {\b gpio_config.h}.}\par
}
{\xe \v Bit4\:GpioPort_t}
{\xe \v GpioPort_t\:Bit4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} Bit4}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gpio port bit 4 (GP4) \par
}{
Definition at line {\b 67} of file {\b gpio_config.h}.}\par
}
{\xe \v Bit5\:GpioPort_t}
{\xe \v GpioPort_t\:Bit5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} Bit5}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gpio port bit 5 (GP5) \par
}{
Definition at line {\b 66} of file {\b gpio_config.h}.}\par
}
{\xe \v Byte\:GpioPort_t}
{\xe \v GpioPort_t\:Byte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint8_t} Byte}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gpio port byte \par
}{
Definition at line {\b 63} of file {\b gpio_config.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this union was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/{\b gpio_config.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/projects/HAL/microcontroller_hal_ref_impl/cmake-build-debug/CMakeFiles/3.21.1/CompilerIdC/CMakeCCompilerId.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/cmake-build-debug/CMakeFiles/3.21.1/CompilerIdC/CMakeCCompilerId.c}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/cmake-build-debug/CMakeFiles/3.21.1/CompilerIdC/CMakeCCompilerId.c}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __has_include}(x)\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COMPILER_ID}\~ ""\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY_HELPER}(X)\~ #X\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY}(X)\~ {\b STRINGIFY_HELPER}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLATFORM_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARCHITECTURE_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEC}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEX}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b C_DIALECT}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_compiler} = "INFO" ":" "compiler[" COMPILER_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_platform} = "INFO" ":" "platform[" PLATFORM_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_arch} = "INFO" ":" "arch[" ARCHITECTURE_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_dialect_default}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v __has_include\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:__has_include}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define __has_include( x)\~ 0}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b CMakeCCompilerId.c}.}\par
}
{\xe \v ARCHITECTURE_ID\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:ARCHITECTURE_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARCHITECTURE_ID}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 668} of file {\b CMakeCCompilerId.c}.}\par
}
{\xe \v C_DIALECT\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:C_DIALECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define C_DIALECT}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 757} of file {\b CMakeCCompilerId.c}.}\par
}
{\xe \v COMPILER_ID\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:COMPILER_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COMPILER_ID\~ ""}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 412} of file {\b CMakeCCompilerId.c}.}\par
}
{\xe \v DEC\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:DEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEC( n)}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + (((n) / 10000000)%10)), \\\par
  ({\cf23 '0'} + (((n) / 1000000)%10)),  \\\par
  ({\cf23 '0'} + (((n) / 100000)%10)),   \\\par
  ({\cf23 '0'} + (((n) / 10000)%10)),    \\\par
  ({\cf23 '0'} + (((n) / 1000)%10)),     \\\par
  ({\cf23 '0'} + (((n) / 100)%10)),      \\\par
  ({\cf23 '0'} + (((n) / 10)%10)),       \\\par
  ({\cf23 '0'} +  ((n) % 10))\par
}
{
Definition at line {\b 672} of file {\b CMakeCCompilerId.c}.}\par
}
{\xe \v HEX\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:HEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEX( n)}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + ((n)>>28 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>24 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>20 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>16 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>12 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>8  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>4  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)     & 0xF))\par
}
{
Definition at line {\b 683} of file {\b CMakeCCompilerId.c}.}\par
}
{\xe \v PLATFORM_ID\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:PLATFORM_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLATFORM_ID}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 540} of file {\b CMakeCCompilerId.c}.}\par
}
{\xe \v STRINGIFY\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:STRINGIFY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY( X)\~ {\b STRINGIFY_HELPER}(X)}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 433} of file {\b CMakeCCompilerId.c}.}\par
}
{\xe \v STRINGIFY_HELPER\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:STRINGIFY_HELPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY_HELPER( X)\~ #X}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 432} of file {\b CMakeCCompilerId.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 781} of file {\b CMakeCCompilerId.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v info_arch\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:info_arch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]"}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 749} of file {\b CMakeCCompilerId.c}.}\par
}
{\xe \v info_compiler\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:info_compiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]"}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 419} of file {\b CMakeCCompilerId.c}.}\par
}
{\xe \v info_language_dialect_default\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:info_language_dialect_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_dialect_default}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
  {\cf22 "INFO"} {\cf22 ":"} {\cf22 "dialect_default["} C_DIALECT {\cf22 "]"}\par
}
{
Definition at line {\b 770} of file {\b CMakeCCompilerId.c}.}\par
}
{\xe \v info_platform\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:info_platform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]"}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 748} of file {\b CMakeCCompilerId.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CMakeCCompilerId.c\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/cmake-build-debug/CMakeFiles/3.21.1/CompilerIdC/CMakeCCompilerId.c}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/cmake-build-debug/CMakeFiles/3.21.1/CompilerIdC/CMakeCCompilerId.c}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifdef __cplusplus}\par
00002 {\cf21 # error "A C++ compiler has been selected for C."}\par
00003 {\cf21 #endif}\par
00004 \par
00005 {\cf21 #if defined(__18CXX)}\par
00006 {\cf21 # define ID_VOID_MAIN}\par
00007 {\cf21 #endif}\par
00008 {\cf21 #if defined(__CLASSIC_C__)}\par
00009 {\cf20 /* cv-qualifiers did not exist in K&R C */}\par
00010 {\cf21 # define const}\par
00011 {\cf21 # define volatile}\par
00012 {\cf21 #endif}\par
00013 \par
00014 {\cf21 #if !defined(__has_include)}\par
00015 {\cf20 /* If the compiler does not have __has_include, pretend the answer is}\par
00016 {\cf20    always no.  */}\par
00017 {\cf21 #  define __has_include(x) 0}\par
00018 {\cf21 #endif}\par
00019 \par
00020 \par
00021 {\cf20 /* Version number components: V=Version, R=Revision, P=Patch}\par
00022 {\cf20    Version date components:   YYYY=Year, MM=Month,   DD=Day  */}\par
00023 \par
00024 {\cf21 #if defined(__INTEL_COMPILER) || defined(__ICC)}\par
00025 {\cf21 # define COMPILER_ID "Intel"}\par
00026 {\cf21 # if defined(_MSC_VER)}\par
00027 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00028 {\cf21 # endif}\par
00029 {\cf21 # if defined(__GNUC__)}\par
00030 {\cf21 #  define SIMULATE_ID "GNU"}\par
00031 {\cf21 # endif}\par
00032   {\cf20 /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,}\par
00033 {\cf20      except that a few beta releases use the old format with V=2021.  */}\par
00034 {\cf21 # if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111}\par
00035 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)}\par
00036 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)}\par
00037 {\cf21 #  if defined(__INTEL_COMPILER_UPDATE)}\par
00038 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)}\par
00039 {\cf21 #  else}\par
00040 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)}\par
00041 {\cf21 #  endif}\par
00042 {\cf21 # else}\par
00043 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)}\par
00044 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)}\par
00045    {\cf20 /* The third version component from --version is an update index,}\par
00046 {\cf20       but no macro is provided for it.  */}\par
00047 {\cf21 #  define COMPILER_VERSION_PATCH DEC(0)}\par
00048 {\cf21 # endif}\par
00049 {\cf21 # if defined(__INTEL_COMPILER_BUILD_DATE)}\par
00050    {\cf20 /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */}\par
00051 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)}\par
00052 {\cf21 # endif}\par
00053 {\cf21 # if defined(_MSC_VER)}\par
00054    {\cf20 /* _MSC_VER = VVRR */}\par
00055 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00056 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00057 {\cf21 # endif}\par
00058 {\cf21 # if defined(__GNUC__)}\par
00059 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00060 {\cf21 # elif defined(__GNUG__)}\par
00061 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)}\par
00062 {\cf21 # endif}\par
00063 {\cf21 # if defined(__GNUC_MINOR__)}\par
00064 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00065 {\cf21 # endif}\par
00066 {\cf21 # if defined(__GNUC_PATCHLEVEL__)}\par
00067 {\cf21 #  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00068 {\cf21 # endif}\par
00069 \par
00070 {\cf21 #elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)}\par
00071 {\cf21 # define COMPILER_ID "IntelLLVM"}\par
00072 {\cf21 #if defined(_MSC_VER)}\par
00073 {\cf21 # define SIMULATE_ID "MSVC"}\par
00074 {\cf21 #endif}\par
00075 {\cf21 #if defined(__GNUC__)}\par
00076 {\cf21 # define SIMULATE_ID "GNU"}\par
00077 {\cf21 #endif}\par
00078 {\cf20 /* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and}\par
00079 {\cf20  * later.  Look for 6 digit vs. 8 digit version number to decide encoding.}\par
00080 {\cf20  * VVVV is no smaller than the current year when a version is released.}\par
00081 {\cf20  */}\par
00082 {\cf21 #if __INTEL_LLVM_COMPILER < 1000000L}\par
00083 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)}\par
00084 {\cf21 # define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)}\par
00085 {\cf21 # define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)}\par
00086 {\cf21 #else}\par
00087 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)}\par
00088 {\cf21 # define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)}\par
00089 {\cf21 # define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)}\par
00090 {\cf21 #endif}\par
00091 {\cf21 #if defined(_MSC_VER)}\par
00092   {\cf20 /* _MSC_VER = VVRR */}\par
00093 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00094 {\cf21 # define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00095 {\cf21 #endif}\par
00096 {\cf21 #if defined(__GNUC__)}\par
00097 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00098 {\cf21 #elif defined(__GNUG__)}\par
00099 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(__GNUG__)}\par
00100 {\cf21 #endif}\par
00101 {\cf21 #if defined(__GNUC_MINOR__)}\par
00102 {\cf21 # define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00103 {\cf21 #endif}\par
00104 {\cf21 #if defined(__GNUC_PATCHLEVEL__)}\par
00105 {\cf21 # define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00106 {\cf21 #endif}\par
00107 \par
00108 {\cf21 #elif defined(__PATHCC__)}\par
00109 {\cf21 # define COMPILER_ID "PathScale"}\par
00110 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__PATHCC__)}\par
00111 {\cf21 # define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)}\par
00112 {\cf21 # if defined(__PATHCC_PATCHLEVEL__)}\par
00113 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)}\par
00114 {\cf21 # endif}\par
00115 \par
00116 {\cf21 #elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)}\par
00117 {\cf21 # define COMPILER_ID "Embarcadero"}\par
00118 {\cf21 # define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)}\par
00119 {\cf21 # define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)}\par
00120 {\cf21 # define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)}\par
00121 \par
00122 {\cf21 #elif defined(__BORLANDC__)}\par
00123 {\cf21 # define COMPILER_ID "Borland"}\par
00124   {\cf20 /* __BORLANDC__ = 0xVRR */}\par
00125 {\cf21 # define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)}\par
00126 {\cf21 # define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)}\par
00127 \par
00128 {\cf21 #elif defined(__WATCOMC__) && __WATCOMC__ < 1200}\par
00129 {\cf21 # define COMPILER_ID "Watcom"}\par
00130    {\cf20 /* __WATCOMC__ = VVRR */}\par
00131 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)}\par
00132 {\cf21 # define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)}\par
00133 {\cf21 # if (__WATCOMC__ % 10) > 0}\par
00134 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)}\par
00135 {\cf21 # endif}\par
00136 \par
00137 {\cf21 #elif defined(__WATCOMC__)}\par
00138 {\cf21 # define COMPILER_ID "OpenWatcom"}\par
00139    {\cf20 /* __WATCOMC__ = VVRP + 1100 */}\par
00140 {\cf21 # define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)}\par
00141 {\cf21 # define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)}\par
00142 {\cf21 # if (__WATCOMC__ % 10) > 0}\par
00143 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)}\par
00144 {\cf21 # endif}\par
00145 \par
00146 {\cf21 #elif defined(__SUNPRO_C)}\par
00147 {\cf21 # define COMPILER_ID "SunPro"}\par
00148 {\cf21 # if __SUNPRO_C >= 0x5100}\par
00149    {\cf20 /* __SUNPRO_C = 0xVRRP */}\par
00150 {\cf21 #  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)}\par
00151 {\cf21 #  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)}\par
00152 {\cf21 #  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)}\par
00153 {\cf21 # else}\par
00154    {\cf20 /* __SUNPRO_CC = 0xVRP */}\par
00155 {\cf21 #  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)}\par
00156 {\cf21 #  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)}\par
00157 {\cf21 #  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)}\par
00158 {\cf21 # endif}\par
00159 \par
00160 {\cf21 #elif defined(__HP_cc)}\par
00161 {\cf21 # define COMPILER_ID "HP"}\par
00162   {\cf20 /* __HP_cc = VVRRPP */}\par
00163 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)}\par
00164 {\cf21 # define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)}\par
00165 {\cf21 # define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)}\par
00166 \par
00167 {\cf21 #elif defined(__DECC)}\par
00168 {\cf21 # define COMPILER_ID "Compaq"}\par
00169   {\cf20 /* __DECC_VER = VVRRTPPPP */}\par
00170 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)}\par
00171 {\cf21 # define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)}\par
00172 {\cf21 # define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)}\par
00173 \par
00174 {\cf21 #elif defined(__IBMC__) && defined(__COMPILER_VER__)}\par
00175 {\cf21 # define COMPILER_ID "zOS"}\par
00176   {\cf20 /* __IBMC__ = VRP */}\par
00177 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)}\par
00178 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)}\par
00179 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)}\par
00180 \par
00181 {\cf21 #elif defined(__ibmxl__) && defined(__clang__)}\par
00182 {\cf21 # define COMPILER_ID "XLClang"}\par
00183 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)}\par
00184 {\cf21 # define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)}\par
00185 {\cf21 # define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)}\par
00186 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)}\par
00187 \par
00188 \par
00189 {\cf21 #elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800}\par
00190 {\cf21 # define COMPILER_ID "XL"}\par
00191   {\cf20 /* __IBMC__ = VRP */}\par
00192 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)}\par
00193 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)}\par
00194 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)}\par
00195 \par
00196 {\cf21 #elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800}\par
00197 {\cf21 # define COMPILER_ID "VisualAge"}\par
00198   {\cf20 /* __IBMC__ = VRP */}\par
00199 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)}\par
00200 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)}\par
00201 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)}\par
00202 \par
00203 {\cf21 #elif defined(__NVCOMPILER)}\par
00204 {\cf21 # define COMPILER_ID "NVHPC"}\par
00205 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)}\par
00206 {\cf21 # define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)}\par
00207 {\cf21 # if defined(__NVCOMPILER_PATCHLEVEL__)}\par
00208 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)}\par
00209 {\cf21 # endif}\par
00210 \par
00211 {\cf21 #elif defined(__PGI)}\par
00212 {\cf21 # define COMPILER_ID "PGI"}\par
00213 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__PGIC__)}\par
00214 {\cf21 # define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)}\par
00215 {\cf21 # if defined(__PGIC_PATCHLEVEL__)}\par
00216 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)}\par
00217 {\cf21 # endif}\par
00218 \par
00219 {\cf21 #elif defined(_CRAYC)}\par
00220 {\cf21 # define COMPILER_ID "Cray"}\par
00221 {\cf21 # define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)}\par
00222 {\cf21 # define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)}\par
00223 \par
00224 {\cf21 #elif defined(__TI_COMPILER_VERSION__)}\par
00225 {\cf21 # define COMPILER_ID "TI"}\par
00226   {\cf20 /* __TI_COMPILER_VERSION__ = VVVRRRPPP */}\par
00227 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)}\par
00228 {\cf21 # define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)}\par
00229 {\cf21 # define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)}\par
00230 \par
00231 {\cf21 #elif defined(__CLANG_FUJITSU)}\par
00232 {\cf21 # define COMPILER_ID "FujitsuClang"}\par
00233 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__FCC_major__)}\par
00234 {\cf21 # define COMPILER_VERSION_MINOR DEC(__FCC_minor__)}\par
00235 {\cf21 # define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)}\par
00236 {\cf21 # define COMPILER_VERSION_INTERNAL_STR __clang_version__}\par
00237 \par
00238 \par
00239 {\cf21 #elif defined(__FUJITSU)}\par
00240 {\cf21 # define COMPILER_ID "Fujitsu"}\par
00241 {\cf21 # if defined(__FCC_version__)}\par
00242 {\cf21 #   define COMPILER_VERSION __FCC_version__}\par
00243 {\cf21 # elif defined(__FCC_major__)}\par
00244 {\cf21 #   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)}\par
00245 {\cf21 #   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)}\par
00246 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)}\par
00247 {\cf21 # endif}\par
00248 {\cf21 # if defined(__fcc_version)}\par
00249 {\cf21 #   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)}\par
00250 {\cf21 # elif defined(__FCC_VERSION)}\par
00251 {\cf21 #   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)}\par
00252 {\cf21 # endif}\par
00253 \par
00254 \par
00255 {\cf21 #elif defined(__ghs__)}\par
00256 {\cf21 # define COMPILER_ID "GHS"}\par
00257 {\cf20 /* __GHS_VERSION_NUMBER = VVVVRP */}\par
00258 {\cf21 # ifdef __GHS_VERSION_NUMBER}\par
00259 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)}\par
00260 {\cf21 # define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)}\par
00261 {\cf21 # define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)}\par
00262 {\cf21 # endif}\par
00263 \par
00264 {\cf21 #elif defined(__TINYC__)}\par
00265 {\cf21 # define COMPILER_ID "TinyCC"}\par
00266 \par
00267 {\cf21 #elif defined(__BCC__)}\par
00268 {\cf21 # define COMPILER_ID "Bruce"}\par
00269 \par
00270 {\cf21 #elif defined(__SCO_VERSION__)}\par
00271 {\cf21 # define COMPILER_ID "SCO"}\par
00272 \par
00273 {\cf21 #elif defined(__ARMCC_VERSION) && !defined(__clang__)}\par
00274 {\cf21 # define COMPILER_ID "ARMCC"}\par
00275 {\cf21 #if __ARMCC_VERSION >= 1000000}\par
00276   {\cf20 /* __ARMCC_VERSION = VRRPPPP */}\par
00277 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)}\par
00278 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)}\par
00279 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)}\par
00280 {\cf21 #else}\par
00281   {\cf20 /* __ARMCC_VERSION = VRPPPP */}\par
00282 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)}\par
00283 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)}\par
00284 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)}\par
00285 {\cf21 #endif}\par
00286 \par
00287 \par
00288 {\cf21 #elif defined(__clang__) && defined(__apple_build_version__)}\par
00289 {\cf21 # define COMPILER_ID "AppleClang"}\par
00290 {\cf21 # if defined(_MSC_VER)}\par
00291 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00292 {\cf21 # endif}\par
00293 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__clang_major__)}\par
00294 {\cf21 # define COMPILER_VERSION_MINOR DEC(__clang_minor__)}\par
00295 {\cf21 # define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)}\par
00296 {\cf21 # if defined(_MSC_VER)}\par
00297    {\cf20 /* _MSC_VER = VVRR */}\par
00298 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00299 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00300 {\cf21 # endif}\par
00301 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)}\par
00302 \par
00303 {\cf21 #elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)}\par
00304 {\cf21 # define COMPILER_ID "ARMClang"}\par
00305 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)}\par
00306 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)}\par
00307 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)}\par
00308 {\cf21 # define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)}\par
00309 \par
00310 {\cf21 #elif defined(__clang__) && __has_include(<hip/hip_version.h>)}\par
00311 {\cf21 # define COMPILER_ID "ROCMClang"}\par
00312 {\cf21 # if defined(_MSC_VER)}\par
00313 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00314 {\cf21 # elif defined(__clang__)}\par
00315 {\cf21 #  define SIMULATE_ID "Clang"}\par
00316 {\cf21 # elif defined(__GNUC__)}\par
00317 {\cf21 #  define SIMULATE_ID "GNU"}\par
00318 {\cf21 # endif}\par
00319 {\cf21 # if defined(__clang__) && __has_include(<hip/hip_version.h>)}\par
00320 {\cf21 #  include <hip/hip_version.h>}\par
00321 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(HIP_VERSION_MAJOR)}\par
00322 {\cf21 #  define COMPILER_VERSION_MINOR DEC(HIP_VERSION_MINOR)}\par
00323 {\cf21 #  define COMPILER_VERSION_PATCH DEC(HIP_VERSION_PATCH)}\par
00324 {\cf21 # endif}\par
00325 \par
00326 {\cf21 #elif defined(__clang__)}\par
00327 {\cf21 # define COMPILER_ID "Clang"}\par
00328 {\cf21 # if defined(_MSC_VER)}\par
00329 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00330 {\cf21 # endif}\par
00331 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__clang_major__)}\par
00332 {\cf21 # define COMPILER_VERSION_MINOR DEC(__clang_minor__)}\par
00333 {\cf21 # define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)}\par
00334 {\cf21 # if defined(_MSC_VER)}\par
00335    {\cf20 /* _MSC_VER = VVRR */}\par
00336 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00337 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00338 {\cf21 # endif}\par
00339 \par
00340 {\cf21 #elif defined(__GNUC__)}\par
00341 {\cf21 # define COMPILER_ID "GNU"}\par
00342 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__GNUC__)}\par
00343 {\cf21 # if defined(__GNUC_MINOR__)}\par
00344 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00345 {\cf21 # endif}\par
00346 {\cf21 # if defined(__GNUC_PATCHLEVEL__)}\par
00347 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00348 {\cf21 # endif}\par
00349 \par
00350 {\cf21 #elif defined(_MSC_VER)}\par
00351 {\cf21 # define COMPILER_ID "MSVC"}\par
00352   {\cf20 /* _MSC_VER = VVRR */}\par
00353 {\cf21 # define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00354 {\cf21 # define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00355 {\cf21 # if defined(_MSC_FULL_VER)}\par
00356 {\cf21 #  if _MSC_VER >= 1400}\par
00357     {\cf20 /* _MSC_FULL_VER = VVRRPPPPP */}\par
00358 {\cf21 #   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)}\par
00359 {\cf21 #  else}\par
00360     {\cf20 /* _MSC_FULL_VER = VVRRPPPP */}\par
00361 {\cf21 #   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)}\par
00362 {\cf21 #  endif}\par
00363 {\cf21 # endif}\par
00364 {\cf21 # if defined(_MSC_BUILD)}\par
00365 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)}\par
00366 {\cf21 # endif}\par
00367 \par
00368 {\cf21 #elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)}\par
00369 {\cf21 # define COMPILER_ID "ADSP"}\par
00370 {\cf21 #if defined(__VISUALDSPVERSION__)}\par
00371   {\cf20 /* __VISUALDSPVERSION__ = 0xVVRRPP00 */}\par
00372 {\cf21 # define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)}\par
00373 {\cf21 # define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)}\par
00374 {\cf21 # define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)}\par
00375 {\cf21 #endif}\par
00376 \par
00377 {\cf21 #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)}\par
00378 {\cf21 # define COMPILER_ID "IAR"}\par
00379 {\cf21 # if defined(__VER__) && defined(__ICCARM__)}\par
00380 {\cf21 #  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)}\par
00381 {\cf21 #  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)}\par
00382 {\cf21 #  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)}\par
00383 {\cf21 #  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)}\par
00384 {\cf21 # elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))}\par
00385 {\cf21 #  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)}\par
00386 {\cf21 #  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))}\par
00387 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)}\par
00388 {\cf21 #  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)}\par
00389 {\cf21 # endif}\par
00390 \par
00391 {\cf21 #elif defined(__SDCC_VERSION_MAJOR) || defined(SDCC)}\par
00392 {\cf21 # define COMPILER_ID "SDCC"}\par
00393 {\cf21 # if defined(__SDCC_VERSION_MAJOR)}\par
00394 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__SDCC_VERSION_MAJOR)}\par
00395 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__SDCC_VERSION_MINOR)}\par
00396 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__SDCC_VERSION_PATCH)}\par
00397 {\cf21 # else}\par
00398   {\cf20 /* SDCC = VRP */}\par
00399 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(SDCC/100)}\par
00400 {\cf21 #  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)}\par
00401 {\cf21 #  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)}\par
00402 {\cf21 # endif}\par
00403 \par
00404 \par
00405 {\cf20 /* These compilers are either not known or too old to define an}\par
00406 {\cf20   identification macro.  Try to identify the platform and guess that}\par
00407 {\cf20   it is the native compiler.  */}\par
00408 {\cf21 #elif defined(__hpux) || defined(__hpua)}\par
00409 {\cf21 # define COMPILER_ID "HP"}\par
00410 \par
00411 {\cf21 #else }{\cf20 /* unknown compiler */}{\cf21 }\par
00412 {\cf21 # define COMPILER_ID ""}\par
00413 {\cf21 #endif}\par
00414 \par
00415 {\cf20 /* Construct the string literal in pieces to prevent the source from}\par
00416 {\cf20    getting matched.  Store it in a pointer rather than an array}\par
00417 {\cf20    because some compilers will just produce instructions to fill the}\par
00418 {\cf20    array rather than assigning a pointer to a static array.  */}\par
00419 {\cf18 char} {\cf17 const}* info_compiler = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler["} COMPILER_ID {\cf22 "]"};\par
00420 {\cf21 #ifdef SIMULATE_ID}\par
00421 {\cf18 char} {\cf17 const}* info_simulate = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "simulate["} SIMULATE_ID {\cf22 "]"};\par
00422 {\cf21 #endif}\par
00423 \par
00424 {\cf21 #ifdef __QNXNTO__}\par
00425 {\cf18 char} {\cf17 const}* qnxnto = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "qnxnto[]"};\par
00426 {\cf21 #endif}\par
00427 \par
00428 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00429 {\cf18 char} {\cf17 const} *info_cray = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_wrapper[CrayPrgEnv]"};\par
00430 {\cf21 #endif}\par
00431 \par
00432 {\cf21 #define STRINGIFY_HELPER(X) #X}\par
00433 {\cf21 #define STRINGIFY(X) STRINGIFY_HELPER(X)}\par
00434 \par
00435 {\cf20 /* Identify known platforms by name.  */}\par
00436 {\cf21 #if defined(__linux) || defined(__linux__) || defined(linux)}\par
00437 {\cf21 # define PLATFORM_ID "Linux"}\par
00438 \par
00439 {\cf21 #elif defined(__MSYS__)}\par
00440 {\cf21 # define PLATFORM_ID "MSYS"}\par
00441 \par
00442 {\cf21 #elif defined(__CYGWIN__)}\par
00443 {\cf21 # define PLATFORM_ID "Cygwin"}\par
00444 \par
00445 {\cf21 #elif defined(__MINGW32__)}\par
00446 {\cf21 # define PLATFORM_ID "MinGW"}\par
00447 \par
00448 {\cf21 #elif defined(__APPLE__)}\par
00449 {\cf21 # define PLATFORM_ID "Darwin"}\par
00450 \par
00451 {\cf21 #elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)}\par
00452 {\cf21 # define PLATFORM_ID "Windows"}\par
00453 \par
00454 {\cf21 #elif defined(__FreeBSD__) || defined(__FreeBSD)}\par
00455 {\cf21 # define PLATFORM_ID "FreeBSD"}\par
00456 \par
00457 {\cf21 #elif defined(__NetBSD__) || defined(__NetBSD)}\par
00458 {\cf21 # define PLATFORM_ID "NetBSD"}\par
00459 \par
00460 {\cf21 #elif defined(__OpenBSD__) || defined(__OPENBSD)}\par
00461 {\cf21 # define PLATFORM_ID "OpenBSD"}\par
00462 \par
00463 {\cf21 #elif defined(__sun) || defined(sun)}\par
00464 {\cf21 # define PLATFORM_ID "SunOS"}\par
00465 \par
00466 {\cf21 #elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)}\par
00467 {\cf21 # define PLATFORM_ID "AIX"}\par
00468 \par
00469 {\cf21 #elif defined(__hpux) || defined(__hpux__)}\par
00470 {\cf21 # define PLATFORM_ID "HP-UX"}\par
00471 \par
00472 {\cf21 #elif defined(__HAIKU__)}\par
00473 {\cf21 # define PLATFORM_ID "Haiku"}\par
00474 \par
00475 {\cf21 #elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)}\par
00476 {\cf21 # define PLATFORM_ID "BeOS"}\par
00477 \par
00478 {\cf21 #elif defined(__QNX__) || defined(__QNXNTO__)}\par
00479 {\cf21 # define PLATFORM_ID "QNX"}\par
00480 \par
00481 {\cf21 #elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)}\par
00482 {\cf21 # define PLATFORM_ID "Tru64"}\par
00483 \par
00484 {\cf21 #elif defined(__riscos) || defined(__riscos__)}\par
00485 {\cf21 # define PLATFORM_ID "RISCos"}\par
00486 \par
00487 {\cf21 #elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)}\par
00488 {\cf21 # define PLATFORM_ID "SINIX"}\par
00489 \par
00490 {\cf21 #elif defined(__UNIX_SV__)}\par
00491 {\cf21 # define PLATFORM_ID "UNIX_SV"}\par
00492 \par
00493 {\cf21 #elif defined(__bsdos__)}\par
00494 {\cf21 # define PLATFORM_ID "BSDOS"}\par
00495 \par
00496 {\cf21 #elif defined(_MPRAS) || defined(MPRAS)}\par
00497 {\cf21 # define PLATFORM_ID "MP-RAS"}\par
00498 \par
00499 {\cf21 #elif defined(__osf) || defined(__osf__)}\par
00500 {\cf21 # define PLATFORM_ID "OSF1"}\par
00501 \par
00502 {\cf21 #elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)}\par
00503 {\cf21 # define PLATFORM_ID "SCO_SV"}\par
00504 \par
00505 {\cf21 #elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)}\par
00506 {\cf21 # define PLATFORM_ID "ULTRIX"}\par
00507 \par
00508 {\cf21 #elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)}\par
00509 {\cf21 # define PLATFORM_ID "Xenix"}\par
00510 \par
00511 {\cf21 #elif defined(__WATCOMC__)}\par
00512 {\cf21 # if defined(__LINUX__)}\par
00513 {\cf21 #  define PLATFORM_ID "Linux"}\par
00514 \par
00515 {\cf21 # elif defined(__DOS__)}\par
00516 {\cf21 #  define PLATFORM_ID "DOS"}\par
00517 \par
00518 {\cf21 # elif defined(__OS2__)}\par
00519 {\cf21 #  define PLATFORM_ID "OS2"}\par
00520 \par
00521 {\cf21 # elif defined(__WINDOWS__)}\par
00522 {\cf21 #  define PLATFORM_ID "Windows3x"}\par
00523 \par
00524 {\cf21 # elif defined(__VXWORKS__)}\par
00525 {\cf21 #  define PLATFORM_ID "VxWorks"}\par
00526 \par
00527 {\cf21 # else }{\cf20 /* unknown platform */}{\cf21 }\par
00528 {\cf21 #  define PLATFORM_ID}\par
00529 {\cf21 # endif}\par
00530 \par
00531 {\cf21 #elif defined(__INTEGRITY)}\par
00532 {\cf21 # if defined(INT_178B)}\par
00533 {\cf21 #  define PLATFORM_ID "Integrity178"}\par
00534 \par
00535 {\cf21 # else }{\cf20 /* regular Integrity */}{\cf21 }\par
00536 {\cf21 #  define PLATFORM_ID "Integrity"}\par
00537 {\cf21 # endif}\par
00538 \par
00539 {\cf21 #else }{\cf20 /* unknown platform */}{\cf21 }\par
00540 {\cf21 # define PLATFORM_ID}\par
00541 \par
00542 {\cf21 #endif}\par
00543 \par
00544 {\cf20 /* For windows compilers MSVC and Intel we can determine}\par
00545 {\cf20    the architecture of the compiler being used.  This is because}\par
00546 {\cf20    the compilers do not have flags that can change the architecture,}\par
00547 {\cf20    but rather depend on which compiler is being used}\par
00548 {\cf20 */}\par
00549 {\cf21 #if defined(_WIN32) && defined(_MSC_VER)}\par
00550 {\cf21 # if defined(_M_IA64)}\par
00551 {\cf21 #  define ARCHITECTURE_ID "IA64"}\par
00552 \par
00553 {\cf21 # elif defined(_M_ARM64EC)}\par
00554 {\cf21 #  define ARCHITECTURE_ID "ARM64EC"}\par
00555 \par
00556 {\cf21 # elif defined(_M_X64) || defined(_M_AMD64)}\par
00557 {\cf21 #  define ARCHITECTURE_ID "x64"}\par
00558 \par
00559 {\cf21 # elif defined(_M_IX86)}\par
00560 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00561 \par
00562 {\cf21 # elif defined(_M_ARM64)}\par
00563 {\cf21 #  define ARCHITECTURE_ID "ARM64"}\par
00564 \par
00565 {\cf21 # elif defined(_M_ARM)}\par
00566 {\cf21 #  if _M_ARM == 4}\par
00567 {\cf21 #   define ARCHITECTURE_ID "ARMV4I"}\par
00568 {\cf21 #  elif _M_ARM == 5}\par
00569 {\cf21 #   define ARCHITECTURE_ID "ARMV5I"}\par
00570 {\cf21 #  else}\par
00571 {\cf21 #   define ARCHITECTURE_ID "ARMV"} STRINGIFY(_M_ARM)\par
00572 {\cf21 #  endif}\par
00573 \par
00574 {\cf21 # elif defined(_M_MIPS)}\par
00575 {\cf21 #  define ARCHITECTURE_ID "MIPS"}\par
00576 \par
00577 {\cf21 # elif defined(_M_SH)}\par
00578 {\cf21 #  define ARCHITECTURE_ID "SHx"}\par
00579 \par
00580 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00581 {\cf21 #  define ARCHITECTURE_ID ""}\par
00582 {\cf21 # endif}\par
00583 \par
00584 {\cf21 #elif defined(__WATCOMC__)}\par
00585 {\cf21 # if defined(_M_I86)}\par
00586 {\cf21 #  define ARCHITECTURE_ID "I86"}\par
00587 \par
00588 {\cf21 # elif defined(_M_IX86)}\par
00589 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00590 \par
00591 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00592 {\cf21 #  define ARCHITECTURE_ID ""}\par
00593 {\cf21 # endif}\par
00594 \par
00595 {\cf21 #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)}\par
00596 {\cf21 # if defined(__ICCARM__)}\par
00597 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00598 \par
00599 {\cf21 # elif defined(__ICCRX__)}\par
00600 {\cf21 #  define ARCHITECTURE_ID "RX"}\par
00601 \par
00602 {\cf21 # elif defined(__ICCRH850__)}\par
00603 {\cf21 #  define ARCHITECTURE_ID "RH850"}\par
00604 \par
00605 {\cf21 # elif defined(__ICCRL78__)}\par
00606 {\cf21 #  define ARCHITECTURE_ID "RL78"}\par
00607 \par
00608 {\cf21 # elif defined(__ICCRISCV__)}\par
00609 {\cf21 #  define ARCHITECTURE_ID "RISCV"}\par
00610 \par
00611 {\cf21 # elif defined(__ICCAVR__)}\par
00612 {\cf21 #  define ARCHITECTURE_ID "AVR"}\par
00613 \par
00614 {\cf21 # elif defined(__ICC430__)}\par
00615 {\cf21 #  define ARCHITECTURE_ID "MSP430"}\par
00616 \par
00617 {\cf21 # elif defined(__ICCV850__)}\par
00618 {\cf21 #  define ARCHITECTURE_ID "V850"}\par
00619 \par
00620 {\cf21 # elif defined(__ICC8051__)}\par
00621 {\cf21 #  define ARCHITECTURE_ID "8051"}\par
00622 \par
00623 {\cf21 # elif defined(__ICCSTM8__)}\par
00624 {\cf21 #  define ARCHITECTURE_ID "STM8"}\par
00625 \par
00626 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00627 {\cf21 #  define ARCHITECTURE_ID ""}\par
00628 {\cf21 # endif}\par
00629 \par
00630 {\cf21 #elif defined(__ghs__)}\par
00631 {\cf21 # if defined(__PPC64__)}\par
00632 {\cf21 #  define ARCHITECTURE_ID "PPC64"}\par
00633 \par
00634 {\cf21 # elif defined(__ppc__)}\par
00635 {\cf21 #  define ARCHITECTURE_ID "PPC"}\par
00636 \par
00637 {\cf21 # elif defined(__ARM__)}\par
00638 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00639 \par
00640 {\cf21 # elif defined(__x86_64__)}\par
00641 {\cf21 #  define ARCHITECTURE_ID "x64"}\par
00642 \par
00643 {\cf21 # elif defined(__i386__)}\par
00644 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00645 \par
00646 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00647 {\cf21 #  define ARCHITECTURE_ID ""}\par
00648 {\cf21 # endif}\par
00649 \par
00650 {\cf21 #elif defined(__TI_COMPILER_VERSION__)}\par
00651 {\cf21 # if defined(__TI_ARM__)}\par
00652 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00653 \par
00654 {\cf21 # elif defined(__MSP430__)}\par
00655 {\cf21 #  define ARCHITECTURE_ID "MSP430"}\par
00656 \par
00657 {\cf21 # elif defined(__TMS320C28XX__)}\par
00658 {\cf21 #  define ARCHITECTURE_ID "TMS320C28x"}\par
00659 \par
00660 {\cf21 # elif defined(__TMS320C6X__) || defined(_TMS320C6X)}\par
00661 {\cf21 #  define ARCHITECTURE_ID "TMS320C6x"}\par
00662 \par
00663 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00664 {\cf21 #  define ARCHITECTURE_ID ""}\par
00665 {\cf21 # endif}\par
00666 \par
00667 {\cf21 #else}\par
00668 {\cf21 #  define ARCHITECTURE_ID}\par
00669 {\cf21 #endif}\par
00670 \par
00671 {\cf20 /* Convert integer to decimal digit literals.  */}\par
00672 {\cf21 #define DEC(n)                   \\}\par
00673 {\cf21   ('0' + (((n) / 10000000)%10)), \\}\par
00674 {\cf21   ('0' + (((n) / 1000000)%10)),  \\}\par
00675 {\cf21   ('0' + (((n) / 100000)%10)),   \\}\par
00676 {\cf21   ('0' + (((n) / 10000)%10)),    \\}\par
00677 {\cf21   ('0' + (((n) / 1000)%10)),     \\}\par
00678 {\cf21   ('0' + (((n) / 100)%10)),      \\}\par
00679 {\cf21   ('0' + (((n) / 10)%10)),       \\}\par
00680 {\cf21   ('0' +  ((n) % 10))}\par
00681 \par
00682 {\cf20 /* Convert integer to hex digit literals.  */}\par
00683 {\cf21 #define HEX(n)             \\}\par
00684 {\cf21   ('0' + ((n)>>28 & 0xF)), \\}\par
00685 {\cf21   ('0' + ((n)>>24 & 0xF)), \\}\par
00686 {\cf21   ('0' + ((n)>>20 & 0xF)), \\}\par
00687 {\cf21   ('0' + ((n)>>16 & 0xF)), \\}\par
00688 {\cf21   ('0' + ((n)>>12 & 0xF)), \\}\par
00689 {\cf21   ('0' + ((n)>>8  & 0xF)), \\}\par
00690 {\cf21   ('0' + ((n)>>4  & 0xF)), \\}\par
00691 {\cf21   ('0' + ((n)     & 0xF))}\par
00692 \par
00693 {\cf20 /* Construct a string literal encoding the version number. */}\par
00694 {\cf21 #ifdef COMPILER_VERSION}\par
00695 {\cf18 char} {\cf17 const}* info_version = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_version["} COMPILER_VERSION {\cf22 "]"};\par
00696 \par
00697 {\cf20 /* Construct a string literal encoding the version number components. */}\par
00698 {\cf21 #elif defined(COMPILER_VERSION_MAJOR)}\par
00699 {\cf18 char} {\cf17 const} info_version[] = \{\par
00700   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00701   {\cf23 'c'},{\cf23 'o'},{\cf23 'm'},{\cf23 'p'},{\cf23 'i'},{\cf23 'l'},{\cf23 'e'},{\cf23 'r'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '['},\par
00702   COMPILER_VERSION_MAJOR,\par
00703 {\cf21 # ifdef COMPILER_VERSION_MINOR}\par
00704   {\cf23 '.'}, COMPILER_VERSION_MINOR,\par
00705 {\cf21 #  ifdef COMPILER_VERSION_PATCH}\par
00706    {\cf23 '.'}, COMPILER_VERSION_PATCH,\par
00707 {\cf21 #   ifdef COMPILER_VERSION_TWEAK}\par
00708     {\cf23 '.'}, COMPILER_VERSION_TWEAK,\par
00709 {\cf21 #   endif}\par
00710 {\cf21 #  endif}\par
00711 {\cf21 # endif}\par
00712   {\cf23 ']'},{\cf23 '\\0'}\};\par
00713 {\cf21 #endif}\par
00714 \par
00715 {\cf20 /* Construct a string literal encoding the internal version number. */}\par
00716 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00717 {\cf18 char} {\cf17 const} info_version_internal[] = \{\par
00718   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00719   {\cf23 'c'},{\cf23 'o'},{\cf23 'm'},{\cf23 'p'},{\cf23 'i'},{\cf23 'l'},{\cf23 'e'},{\cf23 'r'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '_'},\par
00720   {\cf23 'i'},{\cf23 'n'},{\cf23 't'},{\cf23 'e'},{\cf23 'r'},{\cf23 'n'},{\cf23 'a'},{\cf23 'l'},{\cf23 '['},\par
00721   COMPILER_VERSION_INTERNAL,{\cf23 ']'},{\cf23 '\\0'}\};\par
00722 {\cf21 #elif defined(COMPILER_VERSION_INTERNAL_STR)}\par
00723 {\cf18 char} {\cf17 const}* info_version_internal = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_version_internal["} COMPILER_VERSION_INTERNAL_STR {\cf22 "]"};\par
00724 {\cf21 #endif}\par
00725 \par
00726 {\cf20 /* Construct a string literal encoding the version number components. */}\par
00727 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00728 {\cf18 char} {\cf17 const} info_simulate_version[] = \{\par
00729   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00730   {\cf23 's'},{\cf23 'i'},{\cf23 'm'},{\cf23 'u'},{\cf23 'l'},{\cf23 'a'},{\cf23 't'},{\cf23 'e'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '['},\par
00731   SIMULATE_VERSION_MAJOR,\par
00732 {\cf21 # ifdef SIMULATE_VERSION_MINOR}\par
00733   {\cf23 '.'}, SIMULATE_VERSION_MINOR,\par
00734 {\cf21 #  ifdef SIMULATE_VERSION_PATCH}\par
00735    {\cf23 '.'}, SIMULATE_VERSION_PATCH,\par
00736 {\cf21 #   ifdef SIMULATE_VERSION_TWEAK}\par
00737     {\cf23 '.'}, SIMULATE_VERSION_TWEAK,\par
00738 {\cf21 #   endif}\par
00739 {\cf21 #  endif}\par
00740 {\cf21 # endif}\par
00741   {\cf23 ']'},{\cf23 '\\0'}\};\par
00742 {\cf21 #endif}\par
00743 \par
00744 {\cf20 /* Construct the string literal in pieces to prevent the source from}\par
00745 {\cf20    getting matched.  Store it in a pointer rather than an array}\par
00746 {\cf20    because some compilers will just produce instructions to fill the}\par
00747 {\cf20    array rather than assigning a pointer to a static array.  */}\par
00748 {\cf18 char} {\cf17 const}* info_platform = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "platform["} PLATFORM_ID {\cf22 "]"};\par
00749 {\cf18 char} {\cf17 const}* info_arch = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "arch["} ARCHITECTURE_ID {\cf22 "]"};\par
00750 \par
00751 \par
00752 \par
00753 {\cf21 #if !defined(__STDC__) && !defined(__clang__)}\par
00754 {\cf21 # if defined(_MSC_VER) || defined(__ibmxl__) || defined(__IBMC__)}\par
00755 {\cf21 #  define C_DIALECT "90"}\par
00756 {\cf21 # else}\par
00757 {\cf21 #  define C_DIALECT}\par
00758 {\cf21 # endif}\par
00759 {\cf21 #elif __STDC_VERSION__ > 201710L}\par
00760 {\cf21 # define C_DIALECT "23"}\par
00761 {\cf21 #elif __STDC_VERSION__ >= 201710L}\par
00762 {\cf21 # define C_DIALECT "17"}\par
00763 {\cf21 #elif __STDC_VERSION__ >= 201000L}\par
00764 {\cf21 # define C_DIALECT "11"}\par
00765 {\cf21 #elif __STDC_VERSION__ >= 199901L}\par
00766 {\cf21 # define C_DIALECT "99"}\par
00767 {\cf21 #else}\par
00768 {\cf21 # define C_DIALECT "90"}\par
00769 {\cf21 #endif}\par
00770 {\cf17 const} {\cf18 char}* info_language_dialect_default =\par
00771   {\cf22 "INFO"} {\cf22 ":"} {\cf22 "dialect_default["} C_DIALECT {\cf22 "]"};\par
00772 \par
00773 {\cf20 /*--------------------------------------------------------------------------*/}\par
00774 \par
00775 {\cf21 #ifdef ID_VOID_MAIN}\par
00776 {\cf18 void} main() \{\}\par
00777 {\cf21 #else}\par
00778 {\cf21 # if defined(__CLASSIC_C__)}\par
00779 {\cf18 int} main(argc, argv) {\cf18 int} argc; {\cf18 char} *argv[];\par
00780 {\cf21 # else}\par
00781 {\cf18 int} main({\cf18 int} argc, {\cf18 char}* argv[])\par
00782 {\cf21 # endif}\par
00783 \{\par
00784   {\cf18 int} require = 0;\par
00785   require += info_compiler[argc];\par
00786   require += info_platform[argc];\par
00787   require += info_arch[argc];\par
00788 {\cf21 #ifdef COMPILER_VERSION_MAJOR}\par
00789   require += info_version[argc];\par
00790 {\cf21 #endif}\par
00791 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00792   require += info_version_internal[argc];\par
00793 {\cf21 #endif}\par
00794 {\cf21 #ifdef SIMULATE_ID}\par
00795   require += info_simulate[argc];\par
00796 {\cf21 #endif}\par
00797 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00798   require += info_simulate_version[argc];\par
00799 {\cf21 #endif}\par
00800 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00801   require += info_cray[argc];\par
00802 {\cf21 #endif}\par
00803   require += info_language_dialect_default[argc];\par
00804   (void)argv;\par
00805   {\cf19 return} require;\par
00806 \}\par
00807 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/gpio_config.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/gpio_config.c}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/gpio_config.c}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface implementation for general purpose input/output configurations. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gpio_config.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for gpio_config.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "gpio__config_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b GpioConfig_t} *const {\b GpioConfigGet} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface implementation for general purpose input/output configurations. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
This is the implementation file for the configurations of a digital input / output peripheral. \par
}{
Definition in file {\b gpio_config.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gpio_config.c\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/gpio_config.c}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/gpio_config.c}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /************************************************************************************************}\par
00002 {\cf20  * @Title          :    General purpose input/output configurations}\par
00003 {\cf20  * @Filename       :    gpio_config.c}\par
00004 {\cf20  * @Author         :    Eng. Jonnes F. Nascimento}\par
00005 {\cf20  * @Origin Date    :    16/12/2021}\par
00006 {\cf20  * @Version        :    0.0.1}\par
00007 {\cf20  * @Compiler       :    GCC}\par
00008 {\cf20  * @Target         :    --}\par
00009 {\cf20  * @Notes          :    None}\par
00010 {\cf20  * @Revision Date  :    20/12/2021}\par
00011 {\cf20  ************************************************************************************************/}\par
00024 {\cf20 /************************************************************************************************}\par
00025 {\cf20  * Includes}\par
00026 {\cf20  ************************************************************************************************/}\par
00027 {\cf21 #include "gpio_config.h"}\par
00028 \par
00029 {\cf20 /************************************************************************************************}\par
00030 {\cf20  * Defines and Macros}\par
00031 {\cf20  ************************************************************************************************/}\par
00032 \par
00033 {\cf20 /************************************************************************************************}\par
00034 {\cf20  * Global Variables}\par
00035 {\cf20  ************************************************************************************************/}\par
00036 \par
00040 {\cf17 static} {\cf17 const} GpioConfig_t GpioConfig[] = \{\par
00041         \{CHANNEL_GP0, GPIO_PIN_FUNCTION_DIGITAL,            GPIO_PIN_DIRECTION_OUTPUT, GPIO_PIN_PULLUP_DISABLED, GPIO_PIN_STATE_HIGH, GPIO_INTERRUPT_EDGE_NONE\},\par
00042         \{CHANNEL_GP1, GPIO_PIN_FUNCTION_DIGITAL,            GPIO_PIN_DIRECTION_INPUT,  GPIO_PIN_PULLUP_DISABLED, GPIO_PIN_STATE_LOW,  GPIO_INTERRUPT_EDGE_NONE\},\par
00043         \{CHANNEL_GP2, GPIO_PIN_FUNCTION_EXTERNAL_INTERRUPT, GPIO_PIN_DIRECTION_INPUT,  GPIO_PIN_PULLUP_ENABLED,  GPIO_PIN_STATE_HIGH, GPIO_INTERRUPT_EDGE_RISING\},\par
00044         \{CHANNEL_GP3, GPIO_PIN_FUNCTION_DIGITAL,            GPIO_PIN_DIRECTION_INPUT,  GPIO_PIN_PULLUP_DISABLED, GPIO_PIN_STATE_LOW,  GPIO_INTERRUPT_EDGE_NONE\},\par
00045         \{CHANNEL_GP4, GPIO_PIN_FUNCTION_ANALOG,             GPIO_PIN_DIRECTION_INPUT,  GPIO_PIN_PULLUP_DISABLED, GPIO_PIN_STATE_HIGH, GPIO_INTERRUPT_EDGE_NONE\},\par
00046         \{CHANNEL_GP5, GPIO_PIN_FUNCTION_DIGITAL,            GPIO_PIN_DIRECTION_OUTPUT, GPIO_PIN_PULLUP_DISABLED, GPIO_PIN_STATE_HIGH, GPIO_INTERRUPT_EDGE_NONE\}\par
00047 \};\par
00048 \par
00049 {\cf20 /************************************************************************************************}\par
00050 {\cf20  * Functions Definitions}\par
00051 {\cf20  ************************************************************************************************/}\par
00052 \par
00053 {\cf20 /************************************************************************************************}\par
00054 {\cf20 * Function: const GpioConfig_t * const GpioConfigGet(void);}\par
00055 {\cf20 */}\par
00082 {\cf17 const} GpioConfig_t * {\cf17 const} GpioConfigGet({\cf18 void})\par
00083 \{\par
00084     {\cf19 return} ({\cf17 const} GpioConfig_t *) &GpioConfig[0];\par
00085 \}\par
00086 \par
00087 {\cf20 /************************************************************************************************}\par
00088 {\cf20  * EOF}\par
00089 {\cf20  ************************************************************************************************/}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/gpio_config.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/gpio_config.h}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/gpio_config.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface definition for general purpose input/output configurations. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "gpio__config_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b GpioPort_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GpioConfig_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARCH_ADDR_SIZE}\~ unsigned char\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned char {\b uint8_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Port_t} \{ {\b GPIO_PORT}
, {\b NUMBER_OF_PORTS}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GpioChannel_t} \{ {\b CHANNEL_GP0}
, {\b CHANNEL_GP1}
, {\b CHANNEL_GP2}
, {\b CHANNEL_GP3}
, {\b CHANNEL_GP4}
, {\b CHANNEL_GP5}
, {\b GPIO_MAX_PIN_NUMBER}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GpioPinDirection_t} \{ {\b GPIO_PIN_DIRECTION_OUTPUT}
, {\b GPIO_PIN_DIRECTION_INPUT}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GpioPinFunction_t} \{ {\b GPIO_PIN_FUNCTION_DIGITAL}
, {\b GPIO_PIN_FUNCTION_ANALOG}
, {\b GPIO_PIN_FUNCTION_COMPARATOR}
, {\b GPIO_PIN_FUNCTION_TIMER}
, {\b GPIO_PIN_FUNCTION_CAPTURE_COMPARE}
, {\b GPIO_PIN_FUNCTION_INTERRUPT_ON_CHANGE}
, {\b GPIO_PIN_FUNCTION_EXTERNAL_INTERRUPT}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GpioPinPullUp_t} \{ {\b GPIO_PIN_PULLUP_DISABLED}
, {\b GPIO_PIN_PULLUP_ENABLED}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GpioPinInterruptOnChange_t} \{ {\b GPIO_PIN_INTERRUPT_ON_CHANGE_DISABLED}
, {\b GPIO_PIN_INTERRUPT_ON_CHANGE_ENABLED}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GpioPinState_t} \{ {\b GPIO_PIN_STATE_LOW}
, {\b GPIO_PIN_STATE_HIGH}
, {\b GPIO_PIN_MAX_STATES}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GpioInterruptEdge_t} \{ {\b GPIO_INTERRUPT_EDGE_FALLING}
, {\b GPIO_INTERRUPT_EDGE_RISING}
, {\b GPIO_INTERRUPT_EDGE_NONE}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GpioCallbackEvent_t} \{ {\b GPIO_EXTERNAL_INTERRUPT}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b GpioConfig_t} *const {\b GpioConfigGet} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface definition for general purpose input/output configurations. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
This is the header file for the definition of the configuration for a digital input / output peripheral.\par
{\b INTERFACE CHANGE LIST}  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Date \cell }{Software Version \cell }{Initials \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{16/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Interface Created  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{20/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Documentation Created  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
\par
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
}{
Definition in file {\b gpio_config.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ARCH_ADDR_SIZE\:gpio_config.h}
{\xe \v gpio_config.h\:ARCH_ADDR_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARCH_ADDR_SIZE\~ unsigned char}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Microcontroller's architecture memory address size. \par
}{
Definition at line {\b 39} of file {\b gpio_config.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v uint8_t\:gpio_config.h}
{\xe \v gpio_config.h\:uint8_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned char {\b uint8_t}}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte type definition. \par
}{
Definition at line {\b 47} of file {\b gpio_config.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v GpioCallbackEvent_t\:gpio_config.h}
{\xe \v gpio_config.h\:GpioCallbackEvent_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GpioCallbackEvent_t}}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO callback events \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GPIO_EXTERNAL_INTERRUPT\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_EXTERNAL_INTERRUPT}
{\qr GPIO_EXTERNAL_INTERRUPT{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 153} of file {\b gpio_config.h}.}\par
}
{\xe \v GpioChannel_t\:gpio_config.h}
{\xe \v gpio_config.h\:GpioChannel_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GpioChannel_t}}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channels definitions for each GPIO pins. GPIO_MAX_PIN_NUMBER is the control item for pin quantity. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CHANNEL_GP0\:gpio_config.h}
{\xe \v gpio_config.h\:CHANNEL_GP0}
{\qr CHANNEL_GP0{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel for GP0 \par
}\cell }{\row }
{\xe \v CHANNEL_GP1\:gpio_config.h}
{\xe \v gpio_config.h\:CHANNEL_GP1}
{\qr CHANNEL_GP1{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel for GP1 \par
}\cell }{\row }
{\xe \v CHANNEL_GP2\:gpio_config.h}
{\xe \v gpio_config.h\:CHANNEL_GP2}
{\qr CHANNEL_GP2{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel for GP2 \par
}\cell }{\row }
{\xe \v CHANNEL_GP3\:gpio_config.h}
{\xe \v gpio_config.h\:CHANNEL_GP3}
{\qr CHANNEL_GP3{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel for GP3 \par
}\cell }{\row }
{\xe \v CHANNEL_GP4\:gpio_config.h}
{\xe \v gpio_config.h\:CHANNEL_GP4}
{\qr CHANNEL_GP4{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel for GP4 \par
}\cell }{\row }
{\xe \v CHANNEL_GP5\:gpio_config.h}
{\xe \v gpio_config.h\:CHANNEL_GP5}
{\qr CHANNEL_GP5{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel for GP5 \par
}\cell }{\row }
{\xe \v GPIO_MAX_PIN_NUMBER\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_MAX_PIN_NUMBER}
{\qr GPIO_MAX_PIN_NUMBER{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of gpio ports \par
}\cell }{\row }
}
{
Definition at line {\b 78} of file {\b gpio_config.h}.}\par
}
{\xe \v GpioInterruptEdge_t\:gpio_config.h}
{\xe \v gpio_config.h\:GpioInterruptEdge_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GpioInterruptEdge_t}}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO interrupt trigger edge types \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GPIO_INTERRUPT_EDGE_FALLING\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_INTERRUPT_EDGE_FALLING}
{\qr GPIO_INTERRUPT_EDGE_FALLING{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt is enabled on falling edge (0) \par
}\cell }{\row }
{\xe \v GPIO_INTERRUPT_EDGE_RISING\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_INTERRUPT_EDGE_RISING}
{\qr GPIO_INTERRUPT_EDGE_RISING{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt is enabled on rising edge (1) \par
}\cell }{\row }
{\xe \v GPIO_INTERRUPT_EDGE_NONE\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_INTERRUPT_EDGE_NONE}
{\qr GPIO_INTERRUPT_EDGE_NONE{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupts are disabled \par
}\cell }{\row }
}
{
Definition at line {\b 143} of file {\b gpio_config.h}.}\par
}
{\xe \v GpioPinDirection_t\:gpio_config.h}
{\xe \v gpio_config.h\:GpioPinDirection_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GpioPinDirection_t}}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO pin directions definitions. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GPIO_PIN_DIRECTION_OUTPUT\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_DIRECTION_OUTPUT}
{\qr GPIO_PIN_DIRECTION_OUTPUT{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin is output \par
}\cell }{\row }
{\xe \v GPIO_PIN_DIRECTION_INPUT\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_DIRECTION_INPUT}
{\qr GPIO_PIN_DIRECTION_INPUT{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin is input \par
}\cell }{\row }
}
{
Definition at line {\b 92} of file {\b gpio_config.h}.}\par
}
{\xe \v GpioPinFunction_t\:gpio_config.h}
{\xe \v gpio_config.h\:GpioPinFunction_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GpioPinFunction_t}}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO pin functions definitions. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GPIO_PIN_FUNCTION_DIGITAL\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_FUNCTION_DIGITAL}
{\qr GPIO_PIN_FUNCTION_DIGITAL{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin is digital mode \par
}\cell }{\row }
{\xe \v GPIO_PIN_FUNCTION_ANALOG\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_FUNCTION_ANALOG}
{\qr GPIO_PIN_FUNCTION_ANALOG{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin is analog mode \par
}\cell }{\row }
{\xe \v GPIO_PIN_FUNCTION_COMPARATOR\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_FUNCTION_COMPARATOR}
{\qr GPIO_PIN_FUNCTION_COMPARATOR{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin is comparator mode \par
}\cell }{\row }
{\xe \v GPIO_PIN_FUNCTION_TIMER\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_FUNCTION_TIMER}
{\qr GPIO_PIN_FUNCTION_TIMER{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin is timer enabled \par
}\cell }{\row }
{\xe \v GPIO_PIN_FUNCTION_CAPTURE_COMPARE\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_FUNCTION_CAPTURE_COMPARE}
{\qr GPIO_PIN_FUNCTION_CAPTURE_COMPARE{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin is capture/compare mode \par
}\cell }{\row }
{\xe \v GPIO_PIN_FUNCTION_INTERRUPT_ON_CHANGE\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_FUNCTION_INTERRUPT_ON_CHANGE}
{\qr GPIO_PIN_FUNCTION_INTERRUPT_ON_CHANGE{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin is interrupt-on-change enabled \par
}\cell }{\row }
{\xe \v GPIO_PIN_FUNCTION_EXTERNAL_INTERRUPT\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_FUNCTION_EXTERNAL_INTERRUPT}
{\qr GPIO_PIN_FUNCTION_EXTERNAL_INTERRUPT{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin is external interrupt enabled \par
}\cell }{\row }
}
{
Definition at line {\b 101} of file {\b gpio_config.h}.}\par
}
{\xe \v GpioPinInterruptOnChange_t\:gpio_config.h}
{\xe \v gpio_config.h\:GpioPinInterruptOnChange_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GpioPinInterruptOnChange_t}}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO pin interrupts definitions. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GPIO_PIN_INTERRUPT_ON_CHANGE_DISABLED\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_INTERRUPT_ON_CHANGE_DISABLED}
{\qr GPIO_PIN_INTERRUPT_ON_CHANGE_DISABLED{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin interrupts disabled \par
}\cell }{\row }
{\xe \v GPIO_PIN_INTERRUPT_ON_CHANGE_ENABLED\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_INTERRUPT_ON_CHANGE_ENABLED}
{\qr GPIO_PIN_INTERRUPT_ON_CHANGE_ENABLED{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin interrupts enabled \par
}\cell }{\row }
}
{
Definition at line {\b 124} of file {\b gpio_config.h}.}\par
}
{\xe \v GpioPinPullUp_t\:gpio_config.h}
{\xe \v gpio_config.h\:GpioPinPullUp_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GpioPinPullUp_t}}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO pin pullup resistors definitions. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GPIO_PIN_PULLUP_DISABLED\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_PULLUP_DISABLED}
{\qr GPIO_PIN_PULLUP_DISABLED{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin pull-up is disabled \par
}\cell }{\row }
{\xe \v GPIO_PIN_PULLUP_ENABLED\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_PULLUP_ENABLED}
{\qr GPIO_PIN_PULLUP_ENABLED{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin pull-up is enabled \par
}\cell }{\row }
}
{
Definition at line {\b 115} of file {\b gpio_config.h}.}\par
}
{\xe \v GpioPinState_t\:gpio_config.h}
{\xe \v gpio_config.h\:GpioPinState_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b GpioPinState_t}}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO pin states definitions. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GPIO_PIN_STATE_LOW\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_STATE_LOW}
{\qr GPIO_PIN_STATE_LOW{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Low pin state \par
}\cell }{\row }
{\xe \v GPIO_PIN_STATE_HIGH\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_STATE_HIGH}
{\qr GPIO_PIN_STATE_HIGH{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High pin state \par
}\cell }{\row }
{\xe \v GPIO_PIN_MAX_STATES\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PIN_MAX_STATES}
{\qr GPIO_PIN_MAX_STATES{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max pin states \par
}\cell }{\row }
}
{
Definition at line {\b 133} of file {\b gpio_config.h}.}\par
}
{\xe \v Port_t\:gpio_config.h}
{\xe \v gpio_config.h\:Port_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Port_t}}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Microcontroller's GPIO ports. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GPIO_PORT\:gpio_config.h}
{\xe \v gpio_config.h\:GPIO_PORT}
{\qr GPIO_PORT{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gpio port \par
}\cell }{\row }
{\xe \v NUMBER_OF_PORTS\:gpio_config.h}
{\xe \v gpio_config.h\:NUMBER_OF_PORTS}
{\qr NUMBER_OF_PORTS{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of ports on microcontroller \par
}\cell }{\row }
}
{
Definition at line {\b 52} of file {\b gpio_config.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gpio_config.h\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/gpio_config.h}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/config/gpio/gpio_config.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /************************************************************************************************}\par
00002 {\cf20  * @Title          :    General purpose input/output configuration interface}\par
00003 {\cf20  * @Filename       :    gpio_config.h}\par
00004 {\cf20  * @Author         :    Eng. Jonnes F. Nascimento}\par
00005 {\cf20  * @Origin Date    :    16/12/2021}\par
00006 {\cf20  * @Version        :    0.0.1}\par
00007 {\cf20  * @Compiler       :    GCC}\par
00008 {\cf20  * @Target         :    --}\par
00009 {\cf20  * @Notes          :    None}\par
00010 {\cf20  * @Revision Date  :    20/12/2021}\par
00011 {\cf20  ************************************************************************************************/}\par
00026 {\cf21 #ifndef _GPIO_CFG_H_}\par
00027 {\cf21 #define _GPIO_CFG_H_}\par
00028 \par
00029 {\cf20 /************************************************************************************************}\par
00030 {\cf20  * Includes}\par
00031 {\cf20  ************************************************************************************************/}\par
00032 \par
00033 {\cf20 /************************************************************************************************}\par
00034 {\cf20  * Defines and Macros}\par
00035 {\cf20  ************************************************************************************************/}\par
00039 {\cf21 #define ARCH_ADDR_SIZE  unsigned char}\par
00040 \par
00041 {\cf20 /************************************************************************************************}\par
00042 {\cf20  * Typedefs}\par
00043 {\cf20  ************************************************************************************************/}\par
00047 {\cf17 typedef} {\cf18 unsigned} {\cf18 char} uint8_t;\par
00048 \par
00052 {\cf17 typedef} {\cf17 enum}\par
00053 \{\par
00054     GPIO_PORT,       \par
00055     NUMBER_OF_PORTS  \par
00056 \} Port_t;\par
00057 \par
00061 {\cf17 typedef} {\cf17 union}\par
00062 \{\par
00063     uint8_t Byte;        \par
00065     uint8_t      : 2;    \par
00066     uint8_t Bit5 : 1;    \par
00067     uint8_t Bit4 : 1;    \par
00068     uint8_t Bit3 : 1;    \par
00069     uint8_t Bit2 : 1;    \par
00070     uint8_t Bit1 : 1;    \par
00071     uint8_t Bit0 : 1;    \par
00072 \} GpioPort_t;\par
00073 \par
00078 {\cf17 typedef} {\cf17 enum}\par
00079 \{\par
00080     CHANNEL_GP0,        \par
00081     CHANNEL_GP1,        \par
00082     CHANNEL_GP2,        \par
00083     CHANNEL_GP3,        \par
00084     CHANNEL_GP4,        \par
00085     CHANNEL_GP5,        \par
00086     GPIO_MAX_PIN_NUMBER \par
00087 \} GpioChannel_t;\par
00088 \par
00092 {\cf17 typedef} {\cf17 enum}\par
00093 \{\par
00094     GPIO_PIN_DIRECTION_OUTPUT,  \par
00095     GPIO_PIN_DIRECTION_INPUT    \par
00096 \} GpioPinDirection_t;\par
00097 \par
00101 {\cf17 typedef} {\cf17 enum}\par
00102 \{\par
00103     GPIO_PIN_FUNCTION_DIGITAL,               \par
00104     GPIO_PIN_FUNCTION_ANALOG,                \par
00105     GPIO_PIN_FUNCTION_COMPARATOR,            \par
00106     GPIO_PIN_FUNCTION_TIMER,                 \par
00107     GPIO_PIN_FUNCTION_CAPTURE_COMPARE,       \par
00108     GPIO_PIN_FUNCTION_INTERRUPT_ON_CHANGE,   \par
00109     GPIO_PIN_FUNCTION_EXTERNAL_INTERRUPT     \par
00110 \} GpioPinFunction_t;\par
00111 \par
00115 {\cf17 typedef} {\cf17 enum}\par
00116 \{\par
00117     GPIO_PIN_PULLUP_DISABLED,  \par
00118     GPIO_PIN_PULLUP_ENABLED    \par
00119 \} GpioPinPullUp_t;\par
00120 \par
00124 {\cf17 typedef} {\cf17 enum}\par
00125 \{\par
00126     GPIO_PIN_INTERRUPT_ON_CHANGE_DISABLED,  \par
00127     GPIO_PIN_INTERRUPT_ON_CHANGE_ENABLED    \par
00128 \} GpioPinInterruptOnChange_t;\par
00129 \par
00133 {\cf17 typedef} {\cf17 enum}\par
00134 \{\par
00135     GPIO_PIN_STATE_LOW,    \par
00136     GPIO_PIN_STATE_HIGH,   \par
00137     GPIO_PIN_MAX_STATES    \par
00138 \} GpioPinState_t;\par
00139 \par
00143 {\cf17 typedef} {\cf17 enum}\par
00144 \{\par
00145     GPIO_INTERRUPT_EDGE_FALLING,    \par
00146     GPIO_INTERRUPT_EDGE_RISING,     \par
00147     GPIO_INTERRUPT_EDGE_NONE        \par
00148 \} GpioInterruptEdge_t;\par
00149 \par
00153 {\cf17 typedef} {\cf17 enum}\par
00154 \{\par
00155     GPIO_EXTERNAL_INTERRUPT\par
00156 \} GpioCallbackEvent_t;\par
00157 \par
00161 {\cf17 typedef} {\cf17 struct}\par
00162 \{\par
00163     GpioChannel_t       Channel;         \par
00164     GpioPinFunction_t   Function;        \par
00165     GpioPinDirection_t  Direction;       \par
00166     GpioPinPullUp_t     PullUp;          \par
00167     GpioPinState_t      State;           \par
00168     GpioInterruptEdge_t InterruptEdge;   \par
00169 \} GpioConfig_t;\par
00170 \par
00171 {\cf20 /************************************************************************************************}\par
00172 {\cf20  * Global Variables}\par
00173 {\cf20  ************************************************************************************************/}\par
00174 \par
00175 {\cf20 /************************************************************************************************}\par
00176 {\cf20  * Functions Prototypes}\par
00177 {\cf20  ************************************************************************************************/}\par
00181 {\cf17 const} GpioConfig_t * {\cf17 const} GpioConfigGet({\cf18 void});\par
00182 \par
00183 {\cf21 #endif }{\cf20 //_GPIO_CFG_H_}\par
00184 {\cf20 /************************************************************************************************}\par
00185 {\cf20  * EOF}\par
00186 {\cf20  ************************************************************************************************/}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/gpio/gpio.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/gpio/gpio.c}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/gpio/gpio.c}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface implementation for general purpose input/output (GPIO) }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include "pic12f683.h"}\par
{\f2 #include "gpio.h"}\par
{\f2 #include "constants.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for gpio.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "gpio_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BYTE_TO_BINARY_PATTERN}\~ "%c%c%c%c%c%c%c%c"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BYTE_TO_BINARY}(byte)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Init} (const {\b GpioConfig_t} *const Config)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Write} ({\b GpioChannel_t} channel, {\b GpioPinState_t} state)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GpioPinState_t} {\b Gpio_Read} ({\b GpioChannel_t} channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Toggle} ({\b GpioChannel_t} channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Register_Write} ({\b GpioPort_t} Port)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GpioPort_t} {\b Gpio_Register_Read} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Callback_Register} ({\b GpioCallbackEvent_t} event, void(*CallbackFunction)(void))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b trisio} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b gpio} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b ansel} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b option} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint8_t} {\b intcon} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface implementation for general purpose input/output (GPIO) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
This is the implementation file for the interface of a digital input / output peripheral on a standard microcontroller. Some microcontrollers call this digital I/O as PORT_x. In this case, this is called GPIO. \par
}{
Definition in file {\b gpio.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gpio.c\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/gpio/gpio.c}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/gpio/gpio.c}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /************************************************************************************************}\par
00002 {\cf20  * @Title          :    General purpose input/output (GPIO)}\par
00003 {\cf20  * @Filename       :    gpio.c}\par
00004 {\cf20  * @Author         :    Eng. Jonnes F. Nascimento}\par
00005 {\cf20  * @Origin Date    :    16/12/2021}\par
00006 {\cf20  * @Version        :    0.0.1}\par
00007 {\cf20  * @Compiler       :    GCC}\par
00008 {\cf20  * @Target         :    --}\par
00009 {\cf20  * @Notes          :    None}\par
00010 {\cf20  * @Revision Date  :    20/12/2021}\par
00011 {\cf20  ************************************************************************************************/}\par
00025 {\cf20 /************************************************************************************************}\par
00026 {\cf20  * Includes}\par
00027 {\cf20  ************************************************************************************************/}\par
00028 {\cf21 #include <stdio.h>}\par
00029 {\cf21 #include "pic12f683.h"}\par
00030 {\cf21 #include "gpio.h"}\par
00031 {\cf21 #include "constants.h"}\par
00032 \par
00033 {\cf20 /************************************************************************************************}\par
00034 {\cf20  * Defines and Macros}\par
00035 {\cf20  ************************************************************************************************/}\par
00036 {\cf21 #define BYTE_TO_BINARY_PATTERN "%c%c%c%c%c%c%c%c"}\par
00037 {\cf21 #define BYTE_TO_BINARY(byte)  \\}\par
00038 {\cf21   (byte & 0x80 ? '1' : '0'), \\}\par
00039 {\cf21   (byte & 0x40 ? '1' : '0'), \\}\par
00040 {\cf21   (byte & 0x20 ? '1' : '0'), \\}\par
00041 {\cf21   (byte & 0x10 ? '1' : '0'), \\}\par
00042 {\cf21   (byte & 0x08 ? '1' : '0'), \\}\par
00043 {\cf21   (byte & 0x04 ? '1' : '0'), \\}\par
00044 {\cf21   (byte & 0x02 ? '1' : '0'), \\}\par
00045 {\cf21   (byte & 0x01 ? '1' : '0')}\par
00046 \par
00047 {\cf20 /************************************************************************************************}\par
00048 {\cf20  * Typedefs}\par
00049 {\cf20  ************************************************************************************************/}\par
00050 \par
00051 {\cf20 /************************************************************************************************}\par
00052 {\cf20  * Global Variables}\par
00053 {\cf20  ************************************************************************************************/}\par
00054 {\cf20 /* DUMMY TEST VARS */}\par
00055 uint8_t trisio = 0;\par
00056 uint8_t gpio = 0;\par
00057 uint8_t ansel = 0;\par
00058 uint8_t option = 0;\par
00059 uint8_t intcon = 0;\par
00060 \par
00061 {\cf20 /************************************************************************************************}\par
00062 {\cf20  * Module Variables Definitions}\par
00063 {\cf20  ************************************************************************************************/}\par
00064 {\cf20 /* This is for test only - this code must be moved */}\par
00065 {\cf17 static} ARCH_ADDR_SIZE {\cf17 volatile} * {\cf17 const} SystemOscilator = \{\par
00066         (ARCH_ADDR_SIZE *) OSCCON\par
00067 \};\par
00068 \par
00069 {\cf17 static} ARCH_ADDR_SIZE {\cf17 volatile} * {\cf17 const} SystemComparator = \{\par
00070         (ARCH_ADDR_SIZE *) CMCON0\par
00071 \};\par
00072 \par
00073 {\cf17 static} ARCH_ADDR_SIZE {\cf17 volatile} * {\cf17 const} SystemADConverter = \{\par
00074         (ARCH_ADDR_SIZE *) ADCON0\par
00075 \};\par
00076 {\cf20 /* *************************************************************************/}\par
00077 \par
00078 {\cf17 static} ARCH_ADDR_SIZE {\cf17 volatile} * {\cf17 const} GpioPort[NUMBER_OF_PORTS] = \{\par
00079         (ARCH_ADDR_SIZE *) GPIO\par
00080 \};\par
00081 \par
00082 {\cf17 static} ARCH_ADDR_SIZE {\cf17 volatile} * {\cf17 const} GpioDirection[NUMBER_OF_PORTS] = \{\par
00083         (ARCH_ADDR_SIZE *) TRISIO\par
00084 \};\par
00085 \par
00086 {\cf17 static} ARCH_ADDR_SIZE {\cf17 volatile} * {\cf17 const} GpioFunction[NUMBER_OF_PORTS] = \{\par
00087         (ARCH_ADDR_SIZE *) ANSEL\par
00088 \};\par
00089 \par
00090 {\cf17 static} ARCH_ADDR_SIZE {\cf17 volatile} * {\cf17 const} GpioInterruptControl[NUMBER_OF_PORTS] = \{\par
00091         (ARCH_ADDR_SIZE *) INTCON\par
00092 \};\par
00093 \par
00094 {\cf17 static} ARCH_ADDR_SIZE {\cf17 volatile} * {\cf17 const} GpioOption[NUMBER_OF_PORTS] = \{\par
00095         (ARCH_ADDR_SIZE *) OPTION\par
00096 \};\par
00097 {\cf20 /************************************************************************************************}\par
00098 {\cf20  * Functions Prototypes}\par
00099 {\cf20  ************************************************************************************************/}\par
00100 \par
00101 {\cf20 /************************************************************************************************}\par
00102 {\cf20  * Functions Definitions}\par
00103 {\cf20  ************************************************************************************************/}\par
00104 \par
00105 {\cf20 /************************************************************************************************}\par
00106 {\cf20  * Function: void Gpio_Init(const GpioConfig_t * const Config);}\par
00107 {\cf20  */}\par
00146 {\cf18 void} Gpio_Init({\cf17 const} GpioConfig_t * {\cf17 const} Config)\par
00147 \{\par
00148     printf({\cf22 "\\r\\nInitializing GPIO...\\r\\n"});\par
00149     printf({\cf22 "GPIO Byte "}BYTE_TO_BINARY_PATTERN{\cf22 "\\n"}, BYTE_TO_BINARY(gpio));\par
00150 \par
00151     {\cf20 /* This is for test only - this code must be moved */}\par
00152     {\cf20 //*SystemOscilator    = 0x70; /**< Switch to 8 MHz system clock */}\par
00153     {\cf20 //*SystemComparator   = 0x07; /**< Comparators off */}\par
00154     {\cf20 //*SystemADConverters = 0x00; /**< AD Converters off */}\par
00155 \par
00156     {\cf19 for} (uint8_t port = 0; port < NUMBER_OF_PORTS; port++)\par
00157     \{\par
00158         {\cf20 //*GpioPort[port] = 0x00; /**< Resets all GPIO pins */}\par
00159 \par
00160         {\cf20 /* Sets the GPIOs */}\par
00161         {\cf19 for} (uint8_t i = 0; i < GPIO_MAX_PIN_NUMBER; i++)\par
00162         \{\par
00163            {\cf20 // *GpioDirection[port] = (Config[i].Direction << i);}\par
00164            trisio |= (Config[i].Direction << i);\par
00165 \par
00166             {\cf20 // *GpioPort[port] = (Config[i].State << i);}\par
00167            gpio |= (Config[i].State << i);\par
00168 \par
00169            {\cf19 switch} (Config[i].Function)\par
00170            \{\par
00171                {\cf19 case} GPIO_PIN_FUNCTION_ANALOG:\par
00172                    {\cf19 if} (Config[i].Direction == GPIO_PIN_DIRECTION_INPUT)\par
00173                    \{\par
00174                        {\cf20 //*GpioFunction[port] |= (Config[i].Direction << i);}\par
00175                        ansel |= (Config[i].Direction << i);\par
00176                    \}\par
00177                    {\cf19 else}\par
00178                    \{\par
00179                        {\cf20 //*GpioFunction[port] |= (HIGH << i);}\par
00180                        ansel &= ~(HIGH << i);\par
00181                    \}\par
00182                    {\cf19 break};\par
00183                {\cf19 case} GPIO_PIN_FUNCTION_EXTERNAL_INTERRUPT:\par
00184 \par
00185                    {\cf20 // Enables the external interrupt on GP2/INT}\par
00186                    {\cf20 //*GpioInterruptControl[port] |= GIE1_BIT_MASK;}\par
00187                    {\cf20 //*GpioInterruptControl[port] |= INTE_BIT_MASK;}\par
00188                    intcon |= GIE1_BIT_MASK;\par
00189                    intcon |= INTE_BIT_MASK;\par
00190 \par
00191                    {\cf20 // Clears the external interrupt flag INTF}\par
00192                    {\cf20 //*GpioInterruptControl[port] &= ~INTF_BIT_MASK;}\par
00193                    intcon &= ~INTF_BIT_MASK;\par
00194 \par
00195                    {\cf20 // Sets the edge trigger of the interrupt}\par
00196                    {\cf19 if} (Config[i].InterruptEdge == GPIO_INTERRUPT_EDGE_FALLING)\par
00197                    \{\par
00198                        {\cf20 //*GpioOption[port] &= ~INTEDG_BIT_MASK;}\par
00199                        option &= ~INTEDG_BIT_MASK;\par
00200                    \}\par
00201                    {\cf19 else} {\cf19 if} (Config[i].InterruptEdge == GPIO_INTERRUPT_EDGE_RISING)\par
00202                    \{\par
00203                        {\cf20 //*GpioOption[port] |= INTEDG_BIT_MASK;}\par
00204                        option |= INTEDG_BIT_MASK;\par
00205                    \}\par
00206                    {\cf19 else}\par
00207                    \{\par
00208                        {\cf20 // do nothing}\par
00209                    \}\par
00210 \par
00211                    {\cf19 break};\par
00212            \}\par
00213 \par
00214         \}\par
00215     \}\par
00216 \par
00217     printf({\cf22 "OPTION Byte "}BYTE_TO_BINARY_PATTERN{\cf22 "\\n"}, BYTE_TO_BINARY(option));\par
00218     printf({\cf22 "INTCON Byte "}BYTE_TO_BINARY_PATTERN{\cf22 "\\n"}, BYTE_TO_BINARY(intcon));\par
00219     printf({\cf22 "TRISIO Byte "}BYTE_TO_BINARY_PATTERN{\cf22 "\\n"}, BYTE_TO_BINARY(trisio));\par
00220     printf({\cf22 "ANSEL Byte "}BYTE_TO_BINARY_PATTERN{\cf22 "\\n"}, BYTE_TO_BINARY(ansel));\par
00221     printf({\cf22 "GPIO Byte "}BYTE_TO_BINARY_PATTERN{\cf22 "\\n"}, BYTE_TO_BINARY(gpio));\par
00222     printf({\cf22 "GPIO initialized!\\r\\n"});\par
00223     printf({\cf22 "GPIO Port Address: %x\\n"}, GpioDirection[0]);\par
00224 \}\par
00225 \par
00226 {\cf20 /************************************************************************************************}\par
00227 {\cf20  * Function: void Gpio_Write(GpioChannel_t channel, GpioPinState_t state);}\par
00228 {\cf20  */}\par
00263 {\cf18 void} Gpio_Write(GpioChannel_t channel, GpioPinState_t state)\par
00264 \{\par
00265     printf({\cf22 "\\r\\nWriting to GPIO...\\r\\n"});\par
00266     gpio |= (state << channel);\par
00267     {\cf20 //*GpioPort[GPIO_PORT] |= (state << channel);}\par
00268     printf({\cf22 "GPIO Byte "}BYTE_TO_BINARY_PATTERN{\cf22 "\\n"}, BYTE_TO_BINARY(gpio));\par
00269 \}\par
00270 \par
00271 {\cf20 /************************************************************************************************}\par
00272 {\cf20  * Function: GpioPinState_t Gpio_Read(GpioChannel_t channel);}\par
00273 {\cf20  */}\par
00306 GpioPinState_t Gpio_Read(GpioChannel_t channel)\par
00307 \{\par
00308 \par
00309 \}\par
00310 \par
00311 {\cf20 /************************************************************************************************}\par
00312 {\cf20  * Function: void Gpio_Toggle(GpioChannel_t channel);}\par
00313 {\cf20  */}\par
00346 {\cf18 void} Gpio_Toggle(GpioChannel_t channel)\par
00347 \{\par
00348 \par
00349 \}\par
00350 \par
00351 {\cf20 /************************************************************************************************}\par
00352 {\cf20  * Function: void Gpio_Register_Write(GpioPort_t Port);}\par
00353 {\cf20  */}\par
00387 {\cf18 void} Gpio_Register_Write(GpioPort_t Port)\par
00388 \{\par
00389     printf({\cf22 "\\r\\nWriting byte to GPIO...\\r\\n"});\par
00390     gpio = Port.Byte;\par
00391     {\cf20 //*GpioPort[GPIO_PORT] = Port.Byte;}\par
00392     printf({\cf22 "GPIO Byte "}BYTE_TO_BINARY_PATTERN{\cf22 "\\n"}, BYTE_TO_BINARY(gpio));\par
00393 \}\par
00394 \par
00395 {\cf20 /************************************************************************************************}\par
00396 {\cf20  * Function: GpioPort_t Gpio_Register_Read(void);}\par
00397 {\cf20  */}\par
00430 GpioPort_t Gpio_Register_Read({\cf18 void})\par
00431 \{\par
00432     {\cf20 // return *GpioPort[GPIO_PORT];}\par
00433 \}\par
00434 \par
00435 {\cf20 /************************************************************************************************}\par
00436 {\cf20  * Function: void Gpio_Callback_Register(GpioCallbackEvent_t event, void (*CallbackFunction)(void));}\par
00437 {\cf20  */}\par
00472 {\cf18 void} Gpio_Callback_Register(GpioCallbackEvent_t event, {\cf18 void} (*CallbackFunction)({\cf18 void}))\par
00473 \{\par
00474 \par
00475 \}\par
00476 \par
00477 {\cf20 /************************************************************************************************}\par
00478 {\cf20  * EOF}\par
00479 {\cf20  ************************************************************************************************/}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/gpio/gpio.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/gpio/gpio.h}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/gpio/gpio.h}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface definition for general purpose input/output (GPIO) }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gpio/gpio_config.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for gpio.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "gpio_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "gpio_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Init} (const {\b GpioConfig_t} *const Config)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Write} ({\b GpioChannel_t} channel, {\b GpioPinState_t} state)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GpioPinState_t} {\b Gpio_Read} ({\b GpioChannel_t} channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Toggle} ({\b GpioChannel_t} channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Register_Write} ({\b GpioPort_t} port)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GpioPort_t} {\b Gpio_Register_Read} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Gpio_Callback_Register} ({\b GpioCallbackEvent_t} event, void(*CallbackFunction)(void))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface definition for general purpose input/output (GPIO) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
This is the header file for the definition of the interface for a digital input / output peripheral on a standard microcontroller. Some microcontrollers call this digital I/O as PORT_x. In this case, this is called GPIO.\par
{\b INTERFACE CHANGE LIST}  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Date \cell }{Software Version \cell }{Initials \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{16/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Interface Created  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{20/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Documentation Created  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
\par
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
}{
Definition in file {\b gpio.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gpio.h\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/gpio/gpio.h}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/gpio/gpio.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /************************************************************************************************}\par
00002 {\cf20  * @Title          :    General purpose input/output interface}\par
00003 {\cf20  * @Filename       :    gpio.h}\par
00004 {\cf20  * @Author         :    Eng. Jonnes F. Nascimento}\par
00005 {\cf20  * @Origin Date    :    16/12/2021}\par
00006 {\cf20  * @Version        :    0.0.1}\par
00007 {\cf20  * @Compiler       :    GCC}\par
00008 {\cf20  * @Target         :    --}\par
00009 {\cf20  * @Notes          :    None}\par
00010 {\cf20  * @Revision Date  :    20/12/2021}\par
00011 {\cf20  ************************************************************************************************/}\par
00027 {\cf21 #ifndef _GPIO_H_}\par
00028 {\cf21 #define _GPIO_H_}\par
00029 \par
00030 {\cf20 /************************************************************************************************}\par
00031 {\cf20  * Includes}\par
00032 {\cf20  ************************************************************************************************/}\par
00033 {\cf21 #include "gpio/gpio_config.h"}\par
00034 \par
00035 {\cf20 /************************************************************************************************}\par
00036 {\cf20  * Defines and Macros}\par
00037 {\cf20  ************************************************************************************************/}\par
00038 \par
00039 {\cf20 /************************************************************************************************}\par
00040 {\cf20  * Typedefs}\par
00041 {\cf20  ************************************************************************************************/}\par
00042 \par
00043 {\cf20 /************************************************************************************************}\par
00044 {\cf20  * Global Variables}\par
00045 {\cf20  ************************************************************************************************/}\par
00046 \par
00047 {\cf20 /************************************************************************************************}\par
00048 {\cf20  * Functions Prototypes}\par
00049 {\cf20  ************************************************************************************************/}\par
00050 {\cf18 void} Gpio_Init({\cf17 const} GpioConfig_t * {\cf17 const} Config);\par
00051 {\cf18 void} Gpio_Write(GpioChannel_t channel, GpioPinState_t state);\par
00052 GpioPinState_t Gpio_Read(GpioChannel_t channel);\par
00053 {\cf18 void} Gpio_Toggle(GpioChannel_t channel);\par
00054 {\cf18 void} Gpio_Register_Write(GpioPort_t port);\par
00055 GpioPort_t Gpio_Register_Read({\cf18 void});\par
00056 {\cf18 void} Gpio_Callback_Register(GpioCallbackEvent_t event, {\cf18 void} (*CallbackFunction)({\cf18 void}));\par
00057 \par
00058 {\cf21 #endif }{\cf20 //_GPIO_H_}\par
00059 {\cf20 /************************************************************************************************}\par
00060 {\cf20  * EOF}\par
00061 {\cf20  ************************************************************************************************/}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/hardware/pic12f683.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/hardware/pic12f683.h}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/hardware/pic12f683.h}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIC12F683 hardware definitions and specifications. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pic12f683_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char const {\b GIE1_BIT_MASK} = (unsigned char) 0x80\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char const {\b INTE_BIT_MASK} = (unsigned char) 0x10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char const {\b INTF_BIT_MASK} = (unsigned char) 0x02\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char const {\b INTEDG_BIT_MASK} = (unsigned char) 0x40\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b FSR} = (unsigned char *) 0x04\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b GPIO} = (unsigned char *) 0x05\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b INTCON} = (unsigned char *) 0x0B\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b PIR1} = (unsigned char *) 0x0C\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b CMCON0} = (unsigned char *) 0x19\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b ADCON0} = (unsigned char *) 0x1F\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b OPTION} = (unsigned char *) 0x85\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b TRISIO} = (unsigned char *) 0x85\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b PIE1} = (unsigned char *) 0x8C\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b OSCCON} = (unsigned char *) 0x8F\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile unsigned char *const {\b ANSEL} = (unsigned char *) 0x9F\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIC12F683 hardware definitions and specifications. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
This is the hardware definitions for PIC12F683. \par
}{
Definition in file {\b pic12f683.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pic12f683.h\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/hardware/pic12f683.h}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/drivers/hardware/pic12f683.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /************************************************************************************************}\par
00002 {\cf20  * @Title          :    PIC12F683 hardware definitions and specifications}\par
00003 {\cf20  * @Filename       :    pic12f683.h}\par
00004 {\cf20  * @Author         :    Eng. Jonnes F. Nascimento}\par
00005 {\cf20  * @Origin Date    :    16/12/2021}\par
00006 {\cf20  * @Version        :    0.0.1}\par
00007 {\cf20  * @Compiler       :    GCC}\par
00008 {\cf20  * @Target         :    --}\par
00009 {\cf20  * @Notes          :    None}\par
00010 {\cf20  * @Revision Date  :    20/12/2021}\par
00011 {\cf20  ************************************************************************************************/}\par
00022 {\cf21 #ifndef _PIC12F683_H}\par
00023 {\cf21 #define _PIC12F683_H}\par
00024 \par
00025 {\cf18 unsigned} {\cf18 char} {\cf17 const} GIE1_BIT_MASK   = ({\cf18 unsigned} char) 0x80;   \par
00026 {\cf18 unsigned} {\cf18 char} {\cf17 const} INTE_BIT_MASK   = ({\cf18 unsigned} char) 0x10;   \par
00027 {\cf18 unsigned} {\cf18 char} {\cf17 const} INTF_BIT_MASK   = ({\cf18 unsigned} char) 0x02;   \par
00028 {\cf18 unsigned} {\cf18 char} {\cf17 const} INTEDG_BIT_MASK = ({\cf18 unsigned} char) 0x40;   \par
00030 {\cf17 volatile} {\cf18 unsigned} {\cf18 char} * {\cf17 const} FSR    = ({\cf18 unsigned} {\cf18 char} *) 0x04;  \par
00031 {\cf17 volatile} {\cf18 unsigned} {\cf18 char} * {\cf17 const} GPIO   = ({\cf18 unsigned} {\cf18 char} *) 0x05;  \par
00032 {\cf17 volatile} {\cf18 unsigned} {\cf18 char} * {\cf17 const} INTCON = ({\cf18 unsigned} {\cf18 char} *) 0x0B;  \par
00033 {\cf17 volatile} {\cf18 unsigned} {\cf18 char} * {\cf17 const} PIR1   = ({\cf18 unsigned} {\cf18 char} *) 0x0C;  \par
00034 {\cf17 volatile} {\cf18 unsigned} {\cf18 char} * {\cf17 const} CMCON0 = ({\cf18 unsigned} {\cf18 char} *) 0x19;  \par
00035 {\cf17 volatile} {\cf18 unsigned} {\cf18 char} * {\cf17 const} ADCON0 = ({\cf18 unsigned} {\cf18 char} *) 0x1F;  \par
00036 {\cf17 volatile} {\cf18 unsigned} {\cf18 char} * {\cf17 const} OPTION = ({\cf18 unsigned} {\cf18 char} *) 0x85;  \par
00037 {\cf17 volatile} {\cf18 unsigned} {\cf18 char} * {\cf17 const} TRISIO = ({\cf18 unsigned} {\cf18 char} *) 0x85;  \par
00038 {\cf17 volatile} {\cf18 unsigned} {\cf18 char} * {\cf17 const} PIE1   = ({\cf18 unsigned} {\cf18 char} *) 0x8C;  \par
00039 {\cf17 volatile} {\cf18 unsigned} {\cf18 char} * {\cf17 const} OSCCON = ({\cf18 unsigned} {\cf18 char} *) 0x8F;  \par
00040 {\cf17 volatile} {\cf18 unsigned} {\cf18 char} * {\cf17 const} ANSEL  = ({\cf18 unsigned} {\cf18 char} *) 0x9F;  \par
00042 {\cf21 #endif }{\cf20 //_PIC12F683_H}\par
00043 \par
00044 {\cf20 /************************************************************************************************}\par
00045 {\cf20  * EOF}\par
00046 {\cf20  ************************************************************************************************/}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/projects/HAL/microcontroller_hal_ref_impl/hal/library/constants.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/library/constants.h}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/library/constants.h}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface definition for support functions, types and constants. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "constants_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b State_t} \{ {\b LOW}
, {\b HIGH}
, {\b TRI_STATED}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interface definition for support functions, types and constants. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\b INTERFACE CHANGE LIST}  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Date \cell }{Software Version \cell }{Initials \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6561
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{20/12/2021 \cell }{0.0.1 \cell }{JFN \cell }{Interface Created  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
\par
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
}{
Definition in file {\b constants.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v State_t\:constants.h}
{\xe \v constants.h\:State_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b State_t}}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Microcontroller's commons electrical states \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v LOW\:constants.h}
{\xe \v constants.h\:LOW}
{\qr LOW{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Low state (0) \par
}\cell }{\row }
{\xe \v HIGH\:constants.h}
{\xe \v constants.h\:HIGH}
{\qr HIGH{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High state (1) \par
}\cell }{\row }
{\xe \v TRI_STATED\:constants.h}
{\xe \v constants.h\:TRI_STATED}
{\qr TRI_STATED{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High Impedance (HiZ) \par
}\cell }{\row }
}
{
Definition at line {\b 28} of file {\b constants.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
constants.h\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/library/constants.h}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/hal/library/constants.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /************************************************************************************************}\par
00002 {\cf20  * @Title          :    Support functions, types and constants}\par
00003 {\cf20  * @Filename       :    constants.h}\par
00004 {\cf20  * @Author         :    Eng. Jonnes F. Nascimento}\par
00005 {\cf20  * @Origin Date    :    20/12/2021}\par
00006 {\cf20  * @Version        :    0.0.1}\par
00007 {\cf20  * @Compiler       :    GCC}\par
00008 {\cf20  * @Target         :    --}\par
00009 {\cf20  * @Notes          :    None}\par
00010 {\cf20  * @Revision Date  :    --}\par
00011 {\cf20  ************************************************************************************************/}\par
00022 {\cf21 #ifndef _CONSTANTS_H}\par
00023 {\cf21 #define _CONSTANTS_H}\par
00024 \par
00028 {\cf17 typedef} {\cf17 enum}\par
00029 \{\par
00030     LOW,           \par
00031     HIGH,          \par
00032     TRI_STATED     \par
00033 \} State_t;\par
00034 \par
00035 {\cf21 #endif }{\cf20 //_CONSTANTS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/projects/HAL/microcontroller_hal_ref_impl/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/main.c}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/main.c}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main program. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include "hal/drivers/gpio/gpio.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for main.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LedBlink} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main program. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
This is the entrypoint of the firmware.\par
! \par
}{
Definition in file {\b main.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v LedBlink\:main.c}
{\xe \v main.c\:LedBlink}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LedBlink (void )}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 89} of file {\b main.c}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8c_a22006dadf0bde1d3e564a2d5792de074_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v main\:main.c}
{\xe \v main.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 73} of file {\b main.c}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8c_ae66f6b31b5ad750f1fe042a706a4e3d4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/projects/HAL/microcontroller_hal_ref_impl/main.c\par \pard\plain 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /************************************************************************************************}\par
00002 {\cf20  * @Title          :    Main function}\par
00003 {\cf20  * @Filename       :    main.c}\par
00004 {\cf20  * @Author         :    Eng. Jonnes F. Nascimento}\par
00005 {\cf20  * @Origin Date    :    16/12/2021}\par
00006 {\cf20  * @Version        :    0.0.1}\par
00007 {\cf20  * @Compiler       :    GCC}\par
00008 {\cf20  * @Target         :    --}\par
00009 {\cf20  * @Notes          :    None}\par
00010 {\cf20  * @Revision Date  :    20/12/2021}\par
00011 {\cf20  ************************************************************************************************/}\par
00047 {\cf20 /************************************************************************************************}\par
00048 {\cf20  * Includes}\par
00049 {\cf20  ************************************************************************************************/}\par
00050 {\cf21 #include <stdio.h>}\par
00051 {\cf21 #include "hal/drivers/gpio/gpio.h"}\par
00052 \par
00053 {\cf20 /************************************************************************************************}\par
00054 {\cf20  * Defines and Macros}\par
00055 {\cf20  ************************************************************************************************/}\par
00056 \par
00057 {\cf20 /************************************************************************************************}\par
00058 {\cf20  * Typedefs}\par
00059 {\cf20  ************************************************************************************************/}\par
00060 \par
00061 {\cf20 /************************************************************************************************}\par
00062 {\cf20  * Global Variables}\par
00063 {\cf20  ************************************************************************************************/}\par
00064 \par
00065 {\cf20 /************************************************************************************************}\par
00066 {\cf20  * Functions Prototypes}\par
00067 {\cf20  ************************************************************************************************/}\par
00068 {\cf18 void} LedBlink({\cf18 void});\par
00069 \par
00070 {\cf20 /************************************************************************************************}\par
00071 {\cf20  * Functions Definitions}\par
00072 {\cf20  ************************************************************************************************/}\par
00073 {\cf18 int} main() \{\par
00074 \par
00075     GpioPort_t port;\par
00076     port.Byte = 0x08;\par
00077     port.Bit0 = 0x01;\par
00078 \par
00079     Gpio_Init(GpioConfigGet());\par
00080     Gpio_Write(CHANNEL_GP3, GPIO_PIN_STATE_HIGH);\par
00081     Gpio_Write(CHANNEL_GP3, GPIO_PIN_STATE_LOW);\par
00082     Gpio_Register_Write(port);\par
00083 \par
00084     Gpio_Callback_Register(GPIO_EXTERNAL_INTERRUPT, LedBlink);\par
00085 \par
00086     {\cf19 return} 0;\par
00087 \}\par
00088 \par
00089 {\cf18 void} LedBlink({\cf18 void})\par
00090 \{\par
00091     printf({\cf22 "LED BLINKING..."});\par
00092 \}\par
00093 {\cf20 /************************************************************************************************}\par
00094 {\cf20  * EOF}\par
00095 {\cf20  ************************************************************************************************/}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/projects/HAL/microcontroller_hal_ref_impl/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v D:/projects/HAL/microcontroller_hal_ref_impl/README.md}
{\xe \v D:/projects/HAL/microcontroller_hal_ref_impl/README.md}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
